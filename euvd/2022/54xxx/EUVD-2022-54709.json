{
  "id": "EUVD-2022-54709",
  "enisaUuid": "a7142018-b1e4-37e7-b39a-501573903741",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: compat: Do not treat syscall number as ESR_ELx for a bad syscall\n\nIf a compat process tries to execute an unknown system call above the\n__ARM_NR_COMPAT_END number, the kernel sends a SIGILL signal to the\noffending process. Information about the error is printed to dmesg in\ncompat_arm_syscall() -> arm64_notify_die() -> arm64_force_sig_fault() ->\narm64_show_signal().\n\narm64_show_signal() interprets a non-zero value for\ncurrent->thread.fault_code as an exception syndrome and displays the\nmessage associated with the ESR_ELx.EC field (bits 31:26).\ncurrent->thread.fault_code is set in compat_arm_syscall() ->\narm64_notify_die() with the bad syscall number instead of a valid ESR_ELx\nvalue. This means that the ESR_ELx.EC field has the value that the user set\nfor the syscall number and the kernel can end up printing bogus exception\nmessages*. For example, for the syscall number 0x68000000, which evaluates\nto ESR_ELx.EC value of 0x1A (ESR_ELx_EC_FPAC) the kernel prints this error:\n\n[   18.349161] syscall[300]: unhandled exception: ERET/ERETAA/ERETAB, ESR 0x68000000, Oops - bad compat syscall(2) in syscall[10000+50000]\n[   18.350639] CPU: 2 PID: 300 Comm: syscall Not tainted 5.18.0-rc1 #79\n[   18.351249] Hardware name: Pine64 RockPro64 v2.0 (DT)\n[..]\n\nwhich is misleading, as the bad compat syscall has nothing to do with\npointer authentication.\n\nStop arm64_show_signal() from printing exception syndrome information by\nhaving compat_arm_syscall() set the ESR_ELx value to 0, as it has no\nmeaning for an invalid system call number. The example above now becomes:\n\n[   19.935275] syscall[301]: unhandled exception: Oops - bad compat syscall(2) in syscall[10000+50000]\n[   19.936124] CPU: 1 PID: 301 Comm: syscall Not tainted 5.18.0-rc1-00005-g7e08006d4102 #80\n[   19.936894] Hardware name: Pine64 RockPro64 v2.0 (DT)\n[..]\n\nwhich although shows less information because the syscall number,\nwrongfully advertised as the ESR value, is missing, it is better than\nshowing plainly wrong information. The syscall number can be easily\nobtained with strace.\n\n*A 32-bit value above or equal to 0x8000_0000 is interpreted as a negative\ninteger in compat_arm_syscal() and the condition scno < __ARM_NR_COMPAT_END\nevaluates to true; the syscall will exit to userspace in this case with the\nENOSYS error code instead of arm64_notify_die() being called.",
  "datePublished": "Feb 26, 2025, 2:13:46 AM",
  "dateUpdated": "Feb 26, 2025, 2:13:46 AM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/efd183d988b416fcdf6f7c298a17ced4859ca77d",
    "https://git.kernel.org/stable/c/ad97425d23af3c3b8d4f6a2bb666cb485087c007",
    "https://git.kernel.org/stable/c/621916afe8cd4f322eb12759b64a2f938d4e551d",
    "https://git.kernel.org/stable/c/095e975f8150ccd7f852eb578c1cdbdd2f517c7a",
    "https://git.kernel.org/stable/c/3910ae71cb963fa2b68e684489d4fc3d105afda0",
    "https://git.kernel.org/stable/c/3fed9e551417b84038b15117732ea4505eee386b"
  ],
  "aliases": [
    "CVE-2022-49520"
  ],
  "assigner": "Linux",
  "epss": 0.15,
  "enisaIdProduct": [
    {
      "id": "02d39c92-b337-3f8a-a8b4-5d5841727c14",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.4.198"
    },
    {
      "id": "045046e6-a85c-3536-9c51-79066759b885",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.15.46"
    },
    {
      "id": "20afd08a-b588-3d1b-9d1d-4b42ef7f414b",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <efd183d988b416fcdf6f7c298a17ced4859ca77d"
    },
    {
      "id": "4cf21594-f693-3b92-95eb-43b41f2a4f62",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.17.14"
    },
    {
      "id": "710f8ad1-14be-3cc5-98d2-cae6aaacba8c",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.10.121"
    },
    {
      "id": "910e653c-3993-39cc-9c1f-0eef06623c24",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <095e975f8150ccd7f852eb578c1cdbdd2f517c7a"
    },
    {
      "id": "9ee4967c-1322-3eae-b961-c63244e66761",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.19"
    },
    {
      "id": "c28e2c78-9b36-3162-9be4-46ce68973a7d",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <621916afe8cd4f322eb12759b64a2f938d4e551d"
    },
    {
      "id": "cafd6a0c-62ed-3d3f-bffa-e363a44aa58c",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <3910ae71cb963fa2b68e684489d4fc3d105afda0"
    },
    {
      "id": "d7bb23a2-d368-339e-a4da-a30eacaff4b9",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <ad97425d23af3c3b8d4f6a2bb666cb485087c007"
    },
    {
      "id": "f1e6df7f-c34c-3d40-941d-86cf4d0b32a4",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.18.3"
    },
    {
      "id": "fba8522a-0e04-33a0-be99-572985d76e4a",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <3fed9e551417b84038b15117732ea4505eee386b"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "02a8164f-0692-3702-9bab-6653f50ffae3",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}