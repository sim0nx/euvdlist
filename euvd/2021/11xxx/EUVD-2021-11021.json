{
  "id": "EUVD-2021-11021",
  "enisaUuid": "2210bff4-f7af-3ef5-aac3-99fd781a157e",
  "description": "<p>Depending on configuration of various package managers it is possible for an attacker to insert a malicious package into a package manager's repository which can be retrieved and used during development, build, and release processes. This insertion could lead to remote code execution. We believe this vulnerability affects multiple package managers across multiple languages, including but not limited to: Python/pip, .NET/NuGet, Java/Maven, JavaScript/npm.</p>\n<p><strong>Attack scenarios</strong></p>\n<p>An attacker could take advantage of this ecosystem-wide issue to cause harm in a variety of ways. The original attack scenarios were discovered by Alex Birsan and are detailed in their whitepaper, <a href=\"https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610\">Dependency Confusion: How I Hacked Into Apple, Microsoft and Dozens of Other Companies</a>.</p>\n<ul>\n<li><p>With basic knowledge of the target ecosystems, an attacker could create an empty shell for a package and insert malicious code in the install scripts, give it a high version, and publish it to the public repository. Vulnerable victim machines will download the higher version of the package between the public and private repositories and attempt to install it. Due to code incompatibility it will probably error out upon import or upon compilation, making it easier to detect; however the attacker would have gained code execution by that point.</p>\n</li>\n<li><p>An advanced attacker with some inside knowledge of the target could take a copy of a working package, insert the malicious code (in the package itself or in the install), and then publish it to a public repository. The package will likely install and import correctly, granting the attacker an initial foothold and persistence.</p>\n</li>\n</ul>\n<p>These two methods could affect target organizations at any of these various levels:</p>\n<ul>\n<li>Developer machines</li>\n<li>An entire team if the configuration to import the malicious package is uploaded to a code repository</li>\n<li>Continuous integration pipelines if they pull the malicious packages during the build, test, and/or deploy stages</li>\n<li>Customers, download servers, production services if the malicious code has not been detected</li>\n</ul>\n<p>This remote code execution vulnerability can only be addressed by reconfiguring installation tools and workflows, and not by correcting anything in the package repositories themselves. See the <strong>FAQ</strong> section of this CVE for configuration guidance.</p>\n",
  "datePublished": "Feb 25, 2021, 11:01:55 PM",
  "dateUpdated": "Aug 3, 2024, 7:21:18 PM",
  "baseScore": 8.4,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C",
  "references": [
    "https://www.suse.com/security/cve/CVE-2021-24105.html",
    "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-24105"
  ],
  "aliases": [
    "CVE-2021-24105",
    "GSD-2021-24105"
  ],
  "assigner": "microsoft",
  "epss": 0.52,
  "enisaIdProduct": [
    {
      "id": "cf358940-5d0f-3625-ae49-42be14f7e853",
      "product": {
        "name": "Package Manager Configurations"
      },
      "product_version": "N/A"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "878cd0f8-49f1-36b7-8155-67a3bdd9d0b8",
      "vendor": {
        "name": "Microsoft"
      }
    }
  ]
}