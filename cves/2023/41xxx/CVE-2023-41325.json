{
  "id": "EUVD-2023-45838",
  "description": "OP-TEE is a Trusted Execution Environment (TEE) designed as companion to a non-secure Linux kernel running on Arm; Cortex-A cores using the TrustZone technology. Starting in version 3.20 and prior to version 3.22, `shdr_verify_signature` can make a double free. `shdr_verify_signature` used to verify a TA binary before it is loaded. To verify a signature of it, allocate a memory for RSA key. RSA key allocate function (`sw_crypto_acipher_alloc_rsa_public_key`) will try to allocate a memory (which is optee\u2019s heap memory). RSA key is consist of exponent and modulus (represent as variable `e`, `n`) and it allocation is not atomic way, so it may succeed in `e` but fail in `n`. In this case sw_crypto_acipher_alloc_rsa_public_key` will free on `e` and return as it is failed but variable \u2018e\u2019 is remained as already freed memory address . `shdr_verify_signature` will free again that memory (which is `e`) even it is freed when it failed allocate RSA key. A patch is available in version 3.22. No known workarounds are available.",
  "datePublished": "Sep 15, 2023, 7:40:58 PM",
  "dateUpdated": "Sep 25, 2024, 6:49:09 PM",
  "baseScore": 7.4,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:C/C:H/I:H/A:N",
  "references": [
    "https://github.com/OP-TEE/optee_os/security/advisories/GHSA-jrw7-63cq-7vhm",
    "https://github.com/OP-TEE/optee_os/commit/e2ec831cb07ed0099535c7c140cb6338aa62816a"
  ],
  "aliases": [
    "CVE-2023-41325",
    "GSD-2023-41325"
  ],
  "assigner": "GitHub_M",
  "epss": 0.05,
  "enisaIdProduct": [
    {
      "id": "4378359f-1091-30bf-8c53-a165f6d2ea99",
      "product": {
        "name": "optee_os"
      },
      "product_version": "3.20, < 3.22"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "e0d0caaf-ec51-3a7a-ae1d-8f3ad5ccef28",
      "vendor": {
        "name": "OP-TEE"
      }
    }
  ],
  "cve": "CVE-2023-41325"
}