{
  "id": "EUVD-2018-18908",
  "enisaUuid": "1f566bfe-1a31-3bd4-b99d-d2b8496abd32",
  "description": "In all versions of Node.js 10 prior to 10.9.0, an argument processing flaw can cause `Buffer.alloc()` to return uninitialized memory. This method is intended to be safe and only return initialized, or cleared, memory. The third argument specifying `encoding` can be passed as a number, this is misinterpreted by `Buffer's` internal \"fill\" method as the `start` to a fill operation. This flaw may be abused where `Buffer.alloc()` arguments are derived from user input to return uncleared memory blocks that may contain sensitive information.",
  "datePublished": "Aug 21, 2018, 1:00:00 PM",
  "dateUpdated": "Sep 17, 2024, 12:26:00 AM",
  "baseScore": 7.5,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
  "references": [
    "https://www.suse.com/security/cve/CVE-2018-7166.html",
    "https://access.redhat.com/errata/RHBA-2019:0772",
    "https://access.redhat.com/errata/RHSA-2018:2553",
    "https://nodejs.org/en/blog/vulnerability/august-2018-security-releases/"
  ],
  "aliases": [
    "CVE-2018-7166",
    "GSD-2018-7166"
  ],
  "assigner": "nodejs",
  "epss": 0.6,
  "enisaIdProduct": [
    {
      "id": "d11a6b36-b0c7-36d0-abdb-d759ca2bc206",
      "product": {
        "name": "Node.js"
      },
      "product_version": "All versions of Node.js 10 prior to 10.9.0"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "4139a7b3-6022-30d1-86ff-46b5216889b6",
      "vendor": {
        "name": "The Node.js Project"
      }
    }
  ]
}