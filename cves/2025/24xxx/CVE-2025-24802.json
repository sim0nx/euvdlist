{
  "id": "EUVD-2025-0168",
  "description": "Plonky2 is a SNARK implementation based on techniques from PLONK and FRI. Lookup tables, whose length is not divisible by 26 = floor(num_routed_wires / 3) always include the 0 -> 0 input-output pair. Thus a malicious prover can always prove that f(0) = 0 for any lookup table f (unless its length happens to be divisible by 26). The cause of problem is that the LookupTableGate-s are padded with zeros. A workaround from the user side is to extend the table (by repeating some entries) so that its length becomes divisible by 26. This vulnerability is fixed in 1.0.1.",
  "datePublished": "Jan 30, 2025, 7:20:14 PM",
  "dateUpdated": "Jan 30, 2025, 7:55:17 PM",
  "baseScore": 8.6,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:H/A:N",
  "references": [
    "https://github.com/0xPolygonZero/plonky2/security/advisories/GHSA-hj49-h7fq-px5h",
    "https://nvd.nist.gov/vuln/detail/CVE-2025-24802",
    "https://github.com/0xPolygonZero/plonky2/commit/091047f7f10cae082716f3738ad59a583835f7b6",
    "https://github.com/0xPolygonZero/plonky2",
    "https://github.com/0xPolygonZero/plonky2/blob/main/plonky2/src/plonk/prover.rs#L97"
  ],
  "aliases": [
    "CVE-2025-24802",
    "GHSA-hj49-h7fq-px5h"
  ],
  "assigner": "GitHub_M",
  "epss": 0.03,
  "enisaIdProduct": [
    {
      "id": "2462fdb2-b967-3e14-be04-bf4999153695",
      "product": {
        "name": "plonky2"
      },
      "product_version": "= 1.0.0"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "d700d106-7216-39d8-9349-06d08449a3a5",
      "vendor": {
        "name": "0xPolygonZero"
      }
    }
  ],
  "cve": "CVE-2025-24802"
}
