{
  "id": "EUVD-2020-5168",
  "enisaUuid": "cea8c671-1151-3f37-8eec-16e12df1aeb8",
  "description": "Memory leaks were discovered in the CoAP library in Arm Mbed OS 5.15.3 when using the Arm mbed-coap library 5.1.5. The CoAP parser is responsible for parsing received CoAP packets. The function sn_coap_parser_options_parse() parses the CoAP option number field of all options present in the input packet. Each option number is calculated as a sum of the previous option number and a delta of the current option. The delta and the previous option number are expressed as unsigned 16-bit integers. Due to lack of overflow detection, it is possible to craft a packet that wraps the option number around and results in the same option number being processed again in a single packet. Certain options allocate memory by calling a memory allocation function. In the cases of COAP_OPTION_URI_QUERY, COAP_OPTION_URI_PATH, COAP_OPTION_LOCATION_QUERY, and COAP_OPTION_ETAG, there is no check on whether memory has already been allocated, which in conjunction with the option number integer overflow may lead to multiple assignments of allocated memory to a single pointer. This has been demonstrated to lead to memory leak by buffer orphaning. As a result, the memory is never freed.",
  "datePublished": "Jun 18, 2020, 6:24:47 PM",
  "dateUpdated": "Aug 4, 2024, 12:11:18 PM",
  "baseScore": 7.5,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "references": [
    "https://github.com/ARMmbed/mbed-os/issues/12957",
    "https://github.com/ARMmbed/mbed-os/issues/12930",
    "https://github.com/mjurczak/mbed-coap/commit/4647a68e364401e81dbd370728127d844f221d93",
    "https://github.com/ARMmbed/mbed-coap/pull/116"
  ],
  "aliases": [
    "CVE-2020-12887",
    "GSD-2020-12887"
  ],
  "assigner": "mitre",
  "epss": 0.73,
  "enisaIdProduct": [
    {
      "id": "cb830748-f1b2-33a5-8ec0-f18a84c6c127",
      "product": {
        "name": "n/a"
      },
      "product_version": "n/a"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "f47162f6-1bcd-32f9-8e6d-92e44add4284",
      "vendor": {
        "name": "n/a"
      }
    }
  ]
}