{
  "id": "EUVD-2021-1189",
  "enisaUuid": "a50cbfd2-8b4a-3ae3-a8a3-4fe00f734def",
  "description": "WP-CLI is the command-line interface for WordPress. An improper error handling in HTTPS requests management in WP-CLI version 0.12.0 and later allows remote attackers able to intercept the communication to remotely disable the certificate verification on WP-CLI side, gaining full control over the communication content, including the ability to impersonate update servers and push malicious updates towards WordPress instances controlled by the vulnerable WP-CLI agent, or push malicious updates toward WP-CLI itself. The vulnerability stems from the fact that the default behavior of `WP_CLI\\Utils\\http_request()` when encountering a TLS handshake error is to disable certificate validation and retry the same request. The default behavior has been changed with version 2.5.0 of WP-CLI and the `wp-cli/wp-cli` framework (via https://github.com/wp-cli/wp-cli/pull/5523) so that the `WP_CLI\\Utils\\http_request()` method accepts an `$insecure` option that is `false` by default and consequently that a TLS handshake failure is a hard error by default. This new default is a breaking change and ripples through to all consumers of `WP_CLI\\Utils\\http_request()`, including those in separate WP-CLI bundled or third-party packages. https://github.com/wp-cli/wp-cli/pull/5523 has also added an `--insecure` flag to the `cli update` command to counter this breaking change. There is no direct workaround for the default insecure behavior of `wp-cli/wp-cli` versions before 2.5.0. The workaround for dealing with the breaking change in the commands directly affected by the new secure default behavior is to add the `--insecure` flag to manually opt-in to the previous insecure behavior.",
  "datePublished": "Jun 7, 2021, 8:50:17 PM",
  "dateUpdated": "Aug 3, 2024, 10:11:05 PM",
  "baseScore": 9.1,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
  "references": [
    "https://github.com/wp-cli/wp-cli/security/advisories/GHSA-rwgm-f83r-v3qj",
    "https://nvd.nist.gov/vuln/detail/CVE-2021-29504",
    "https://github.com/wp-cli/checksum-command/pull/86",
    "https://github.com/wp-cli/config-command/pull/128",
    "https://github.com/wp-cli/core-command/pull/186",
    "https://github.com/wp-cli/extension-command/pull/287",
    "https://github.com/wp-cli/package-command/pull/138",
    "https://github.com/wp-cli/wp-cli/pull/5523",
    "https://github.com/FriendsOfPHP/security-advisories/blob/master/wp-cli/wp-cli/CVE-2021-29504.yaml",
    "https://www.suse.com/security/cve/CVE-2021-29504.html"
  ],
  "aliases": [
    "CVE-2021-29504",
    "GHSA-rwgm-f83r-v3qj"
  ],
  "assigner": "GitHub_M",
  "epss": 0.85,
  "enisaIdProduct": [
    {
      "id": "bc927dec-f6a1-3c2e-8cea-7421577573db",
      "product": {
        "name": "wp-cli"
      },
      "product_version": "< 2.5.0"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "430e3431-c2db-3179-aee4-6074385a09e0",
      "vendor": {
        "name": "wp-cli"
      }
    }
  ]
}