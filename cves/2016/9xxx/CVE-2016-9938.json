{
  "id": "EUVD-2016-10725",
  "enisaUuid": "30fbd7a0-0e7e-3207-9686-0ea4385d5d6f",
  "description": "An issue was discovered in Asterisk Open Source 11.x before 11.25.1, 13.x before 13.13.1, and 14.x before 14.2.1 and Certified Asterisk 11.x before 11.6-cert16 and 13.x before 13.8-cert4. The chan_sip channel driver has a liberal definition for whitespace when attempting to strip the content between a SIP header name and a colon character. Rather than following RFC 3261 and stripping only spaces and horizontal tabs, Asterisk treats any non-printable ASCII character as if it were whitespace. This means that headers such as Contact\\x01: will be seen as a valid Contact header. This mostly does not pose a problem until Asterisk is placed in tandem with an authenticating SIP proxy. In such a case, a crafty combination of valid and invalid To headers can cause a proxy to allow an INVITE request into Asterisk without authentication since it believes the request is an in-dialog request. However, because of the bug described above, the request will look like an out-of-dialog request to Asterisk. Asterisk will then process the request as a new call. The result is that Asterisk can process calls from unvetted sources without any authentication. If you do not use a proxy for authentication, then this issue does not affect you. If your proxy is dialog-aware (meaning that the proxy keeps track of what dialogs are currently valid), then this issue does not affect you. If you use chan_pjsip instead of chan_sip, then this issue does not affect you.",
  "datePublished": "Dec 12, 2016, 9:00:00 PM",
  "dateUpdated": "Aug 6, 2024, 3:07:31 AM",
  "baseScore": 5.3,
  "baseScoreVersion": "3.0",
  "baseScoreVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
  "references": [
    "http://downloads.asterisk.org/pub/security/AST-2016-009.html",
    "http://www.securityfocus.com/bid/94789",
    "http://www.securitytracker.com/id/1037408"
  ],
  "aliases": [
    "CVE-2016-9938",
    "GSD-2016-9938"
  ],
  "assigner": "mitre",
  "epss": 1.92,
  "enisaIdProduct": [
    {
      "id": "7340b5d2-e515-302c-83e2-c4a52692664b",
      "product": {
        "name": "n/a"
      },
      "product_version": "n/a"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "e5abf435-1c3a-35c6-9b30-2912a3e9e7cf",
      "vendor": {
        "name": "n/a"
      }
    }
  ],
  "cve": "CVE-2016-9938"
}