{
  "id": "EUVD-2019-7026",
  "enisaUuid": "c86bfbe1-8662-3c3d-89e1-85a9c150065b",
  "description": "Libra Core before 2019-09-03 has an erroneous regular expression for inline comments, which makes it easier for attackers to interfere with code auditing by using a nonstandard line-break character for a comment. For example, a Move module author can enter the // sequence (which introduces a single-line comment), followed by very brief comment text, the \\r character, and code that has security-critical functionality. In many popular environments, this code is displayed on a separate line, and thus a reader may infer that the code is executed. However, the code is NOT executed, because language/compiler/ir_to_bytecode/src/parser.rs allows the comment to continue after the \\r character.",
  "datePublished": "Sep 11, 2019, 3:51:57 AM",
  "dateUpdated": "Aug 5, 2024, 1:10:41 AM",
  "baseScore": 5.7,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:H/A:N",
  "references": [
    "https://blog.openzeppelin.com/libra-vulnerability-summary/",
    "https://blog.openzeppelin.com/libra-vulnerability-release/",
    "https://github.com/libra/libra/commit/7efb0221989f17fdf7f8486730898ed947a1e19e"
  ],
  "aliases": [
    "CVE-2019-16214",
    "GSD-2019-16214"
  ],
  "assigner": "mitre",
  "epss": 0.26,
  "enisaIdProduct": [
    {
      "id": "275b589c-4073-3183-9e6d-a2f51c4bd54e",
      "product": {
        "name": "n/a"
      },
      "product_version": "n/a"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "ec59f046-6704-3c90-b6d2-f7bd30f0409d",
      "vendor": {
        "name": "n/a"
      }
    }
  ]
}