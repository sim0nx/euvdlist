{
  "id": "EUVD-2025-34783",
  "enisaUuid": "61e29400-cdb3-3e0c-a369-33260eed5d06",
  "description": "A Use-After-Free (UAF) vulnerability exists in the QuickJS engine's standard library when iterating over the global list of unhandled rejected promises (ts->rejected_promise_list).\n\n  *  The function js_std_promise_rejection_check attempts to iterate over the rejected_promise_list to report unhandled rejections using a standard list loop.\n\n\n  *  The reason for a promise rejection is processed inside the loop, including calling js_std_dump_error1(ctx, rp->reason).\n\n\n  *  If the promise rejection reason is an Error object that defines a custom property getter (e.g., via Object.defineProperty), this getter is executed during the error dumping process.\n\n\n  *  The malicious custom getter can execute JavaScript code that calls catch() on the same rejected promise being processed.\n\n\n  *  Calling catch() internally triggers js_std_promise_rejection_tracker, which then removes and frees the current promise entry (JSRejectedPromiseEntry) from the rejected_promise_list.\n\n\n  *  Since the list iteration continues using the now-freed memory pointer (el), the subsequent loop access results in a Use-After-Free condition.",
  "datePublished": "Oct 16, 2025, 6:30:24 PM",
  "dateUpdated": "Oct 16, 2025, 6:30:24 PM",
  "baseScore": 8.8,
  "baseScoreVersion": "4.0",
  "baseScoreVector": "CVSS:4.0/AV:A/AC:H/AT:P/PR:N/UI:P/VC:H/VI:H/VA:L/SC:H/SI:H/SA:L",
  "references": [
    "https://bellard.org/quickjs/Changelog",
    "https://issuetracker.google.com/434195203",
    "https://nvd.nist.gov/vuln/detail/CVE-2025-62491"
  ],
  "aliases": [
    "CVE-2025-62491"
  ],
  "assigner": "Google",
  "epss": 0.02,
  "enisaIdProduct": [
    {
      "id": "0268214d-c2b1-385f-a745-3a6424c9bcd4",
      "product": {
        "name": "QuickJS"
      },
      "product_version": "2025-04-26 <2025-09-13"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "567935f5-49e4-3216-890f-de5b0a917dd7",
      "vendor": {
        "name": "QuickJS"
      }
    }
  ]
}