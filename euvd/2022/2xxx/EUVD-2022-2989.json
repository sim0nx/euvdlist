{
  "id": "EUVD-2022-2989",
  "enisaUuid": "c40ce833-95c3-3895-a928-ad65de6c19f2",
  "description": "GitHub Electron before 1.6.8 allows remote command execution because of a nodeIntegration bypass vulnerability. This also affects all applications that bundle Electron code equivalent to 1.6.8 or earlier. Bypassing the Same Origin Policy (SOP) is a precondition; however, recent Electron versions do not have strict SOP enforcement. Combining an SOP bypass with a privileged URL internally used by Electron, it was possible to execute native Node.js primitives in order to run OS commands on the user's host. Specifically, a chrome-devtools://devtools/bundled/inspector.html window could be used to eval a Node.js child_process.execFile API call.",
  "datePublished": "Aug 6, 2017, 2:00:00 AM",
  "dateUpdated": "Aug 5, 2024, 6:43:56 PM",
  "baseScore": 8.1,
  "baseScoreVersion": "3.0",
  "baseScoreVector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "references": [
    "https://nvd.nist.gov/vuln/detail/CVE-2017-12581",
    "https://github.com/electron/electron/commit/05b6d91bf4c1e0ee65eeef70cd5d1bd1df125644",
    "https://blog.doyensec.com/2017/08/03/electron-framework-security.html",
    "https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security.pdf",
    "https://github.com/electron/electron"
  ],
  "aliases": [
    "CVE-2017-12581",
    "GHSA-7fv9-m79r-j9x8"
  ],
  "assigner": "mitre",
  "epss": 1.17,
  "enisaIdProduct": [
    {
      "id": "f31cd995-8279-3c4c-afed-56abade1279d",
      "product": {
        "name": "n/a"
      },
      "product_version": "n/a"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "da6c66bb-d33f-3332-af81-bd729b51f7b5",
      "vendor": {
        "name": "n/a"
      }
    }
  ]
}