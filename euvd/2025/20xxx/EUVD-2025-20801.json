{
  "id": "EUVD-2025-20801",
  "enisaUuid": "2b8c8bba-9745-3954-a847-7af0d77166cd",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: handle csum tree error with rescue=ibadroots correctly\n\n[BUG]\nThere is syzbot based reproducer that can crash the kernel, with the\nfollowing call trace: (With some debug output added)\n\n DEBUG: rescue=ibadroots parsed\n BTRFS: device fsid 14d642db-7b15-43e4-81e6-4b8fac6a25f8 devid 1 transid 8 /dev/loop0 (7:0) scanned by repro (1010)\n BTRFS info (device loop0): first mount of filesystem 14d642db-7b15-43e4-81e6-4b8fac6a25f8\n BTRFS info (device loop0): using blake2b (blake2b-256-generic) checksum algorithm\n BTRFS info (device loop0): using free-space-tree\n BTRFS warning (device loop0): checksum verify failed on logical 5312512 mirror 1 wanted 0xb043382657aede36608fd3386d6b001692ff406164733d94e2d9a180412c6003 found 0x810ceb2bacb7f0f9eb2bf3b2b15c02af867cb35ad450898169f3b1f0bd818651 level 0\n DEBUG: read tree root path failed for tree csum, ret=-5\n BTRFS warning (device loop0): checksum verify failed on logical 5328896 mirror 1 wanted 0x51be4e8b303da58e6340226815b70e3a93592dac3f30dd510c7517454de8567a found 0x51be4e8b303da58e634022a315b70e3a93592dac3f30dd510c7517454de8567a level 0\n BTRFS warning (device loop0): checksum verify failed on logical 5292032 mirror 1 wanted 0x1924ccd683be9efc2fa98582ef58760e3848e9043db8649ee382681e220cdee4 found 0x0cb6184f6e8799d9f8cb335dccd1d1832da1071d12290dab3b85b587ecacca6e level 0\n process 'repro' launched './file2' with NULL argv: empty string added\n DEBUG: no csum root, idatacsums=0 ibadroots=134217728\n Oops: general protection fault, probably for non-canonical address 0xdffffc0000000041: 0000 [#1] SMP KASAN NOPTI\n KASAN: null-ptr-deref in range [0x0000000000000208-0x000000000000020f]\n CPU: 5 UID: 0 PID: 1010 Comm: repro Tainted: G           OE       6.15.0-custom+ #249 PREEMPT(full)\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS unknown 02/02/2022\n RIP: 0010:btrfs_lookup_csum+0x93/0x3d0 [btrfs]\n Call Trace:\n  <TASK>\n  btrfs_lookup_bio_sums+0x47a/0xdf0 [btrfs]\n  btrfs_submit_bbio+0x43e/0x1a80 [btrfs]\n  submit_one_bio+0xde/0x160 [btrfs]\n  btrfs_readahead+0x498/0x6a0 [btrfs]\n  read_pages+0x1c3/0xb20\n  page_cache_ra_order+0x4b5/0xc20\n  filemap_get_pages+0x2d3/0x19e0\n  filemap_read+0x314/0xde0\n  __kernel_read+0x35b/0x900\n  bprm_execve+0x62e/0x1140\n  do_execveat_common.isra.0+0x3fc/0x520\n  __x64_sys_execveat+0xdc/0x130\n  do_syscall_64+0x54/0x1d0\n  entry_SYSCALL_64_after_hwframe+0x76/0x7e\n ---[ end trace 0000000000000000 ]---\n\n[CAUSE]\nFirstly the fs has a corrupted csum tree root, thus to mount the fs we\nhave to go \"ro,rescue=ibadroots\" mount option.\n\nNormally with that mount option, a bad csum tree root should set\nBTRFS_FS_STATE_NO_DATA_CSUMS flag, so that any future data read will\nignore csum search.\n\nBut in this particular case, we have the following call trace that\ncaused NULL csum root, but not setting BTRFS_FS_STATE_NO_DATA_CSUMS:\n\nload_global_roots_objectid():\n\n\t\tret = btrfs_search_slot();\n\t\t/* Succeeded */\n\t\tbtrfs_item_key_to_cpu()\n\t\tfound = true;\n\t\t/* We found the root item for csum tree. */\n\t\troot = read_tree_root_path();\n\t\tif (IS_ERR(root)) {\n\t\t\tif (!btrfs_test_opt(fs_info, IGNOREBADROOTS))\n\t\t\t/*\n\t\t\t * Since we have rescue=ibadroots mount option,\n\t\t\t * @ret is still 0.\n\t\t\t */\n\t\t\tbreak;\n\tif (!found || ret) {\n\t\t/* @found is true, @ret is 0, error handling for csum\n\t\t * tree is skipped.\n\t\t */\n\t}\n\nThis means we completely skipped to set BTRFS_FS_STATE_NO_DATA_CSUMS if\nthe csum tree is corrupted, which results unexpected later csum lookup.\n\n[FIX]\nIf read_tree_root_path() failed, always populate @ret to the error\nnumber.\n\nAs at the end of the function, we need @ret to determine if we need to\ndo the extra error handling for csum tree.",
  "datePublished": "Jul 9, 2025, 10:42:36 AM",
  "dateUpdated": "Jul 28, 2025, 4:16:26 AM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/f8ce11903211542a61f05c02caedd2edfb4256b8",
    "https://git.kernel.org/stable/c/fc97a116dc4929905538bc0bd3af7faa51192957",
    "https://git.kernel.org/stable/c/bbe9231fe611a54a447962494472f604419bad59",
    "https://git.kernel.org/stable/c/3f5c4a996f8f4fecd24a3eb344a307c50af895c2",
    "https://git.kernel.org/stable/c/547e836661554dcfa15c212a3821664e85b4191a"
  ],
  "aliases": [
    "CVE-2025-38260"
  ],
  "assigner": "Linux",
  "epss": 0.03,
  "enisaIdProduct": [
    {
      "id": "0d5448b9-e57d-3b7b-84f9-b5129bacc722",
      "product": {
        "name": "Linux"
      },
      "product_version": "abed4aaae4f71a7bcdbe90a65319b6e772a2689d <f8ce11903211542a61f05c02caedd2edfb4256b8"
    },
    {
      "id": "1371aafa-a1f7-394b-b1ae-094836347d71",
      "product": {
        "name": "Linux"
      },
      "product_version": "abed4aaae4f71a7bcdbe90a65319b6e772a2689d <547e836661554dcfa15c212a3821664e85b4191a"
    },
    {
      "id": "26e6a3ae-bd09-3e13-bc24-8e1e7faf657e",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.16-rc4"
    },
    {
      "id": "2d926e63-4969-34dd-b179-db1684869d59",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "2e606388-6ba0-351b-952d-7b3107b6fadf",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.15.5"
    },
    {
      "id": "30fbfb60-ca47-3c0c-9105-ea51fb708226",
      "product": {
        "name": "Linux"
      },
      "product_version": "abed4aaae4f71a7bcdbe90a65319b6e772a2689d <fc97a116dc4929905538bc0bd3af7faa51192957"
    },
    {
      "id": "6aa696f4-5b61-31d7-b264-e9c9bc5c78ce",
      "product": {
        "name": "Linux"
      },
      "product_version": "5.17"
    },
    {
      "id": "6ff0e704-75f4-333f-a4c4-49d5e8470c05",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.6.96"
    },
    {
      "id": "9cd0a4bd-83ac-38c6-ac48-944df4ef6ba1",
      "product": {
        "name": "Linux"
      },
      "product_version": "abed4aaae4f71a7bcdbe90a65319b6e772a2689d <3f5c4a996f8f4fecd24a3eb344a307c50af895c2"
    },
    {
      "id": "b1387092-a0b2-3ad2-9972-1cfa4b411edb",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.1.143"
    },
    {
      "id": "c5777dd9-4ec0-3b47-8f36-b3cdcf6c7957",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.12.36"
    },
    {
      "id": "cf9fd6bd-d836-3615-a332-ad9753fb75ab",
      "product": {
        "name": "Linux"
      },
      "product_version": "abed4aaae4f71a7bcdbe90a65319b6e772a2689d <bbe9231fe611a54a447962494472f604419bad59"
    },
    {
      "id": "ef8ba785-2f76-336b-a104-c22fe7ca7381",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.16"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "1adf1962-7e9d-3c92-b140-9f4612417365",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}