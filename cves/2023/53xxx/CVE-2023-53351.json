{
  "id": "EUVD-2023-59975",
  "enisaUuid": "6cd514f4-a5aa-347c-bd2f-d90d6b60d4b5",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/sched: Check scheduler work queue before calling timeout handling\n\nDuring an IGT GPU reset test we see again oops despite of\ncommit 0c8c901aaaebc9 (drm/sched: Check scheduler ready before calling\ntimeout handling).\n\nIt uses ready condition whether to call drm_sched_fault which unwind\nthe TDR leads to GPU reset.\nHowever it looks the ready condition is overloaded with other meanings,\nfor example, for the following stack is related GPU reset :\n\n0  gfx_v9_0_cp_gfx_start\n1  gfx_v9_0_cp_gfx_resume\n2  gfx_v9_0_cp_resume\n3  gfx_v9_0_hw_init\n4  gfx_v9_0_resume\n5  amdgpu_device_ip_resume_phase2\n\ndoes the following:\n\t/* start the ring */\n\tgfx_v9_0_cp_gfx_start(adev);\n\tring->sched.ready = true;\n\nThe same approach is for other ASICs as well :\ngfx_v8_0_cp_gfx_resume\ngfx_v10_0_kiq_resume, etc...\n\nAs a result, our GPU reset test causes GPU fault which calls unconditionally gfx_v9_0_fault\nand then drm_sched_fault. However now it depends on whether the interrupt service routine\ndrm_sched_fault is executed after gfx_v9_0_cp_gfx_start is completed which sets the ready\nfield of the scheduler to true even  for uninitialized schedulers and causes oops vs\nno fault or when ISR  drm_sched_fault is completed prior  gfx_v9_0_cp_gfx_start and\nNULL pointer dereference does not occur.\n\nUse the field timeout_wq  to prevent oops for uninitialized schedulers.\nThe field could be initialized by the work queue of resetting the domain.\n\nv1: Corrections to commit message (Luben)",
  "datePublished": "Sep 17, 2025, 2:56:42 PM",
  "dateUpdated": "Sep 17, 2025, 2:56:42 PM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/c43a96fc00b662cef1ef0eb22d40441ce2abae8f",
    "https://git.kernel.org/stable/c/2da5bffe9eaa5819a868e8eaaa11b3fd0f16a691",
    "https://nvd.nist.gov/vuln/detail/CVE-2023-53351"
  ],
  "aliases": [
    "CVE-2023-53351"
  ],
  "assigner": "Linux",
  "epss": 0.03,
  "enisaIdProduct": [
    {
      "id": "157fe7de-9f1b-35fd-a76a-34a1a3c0bfee",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "2356aaf5-c196-349c-9916-3bb2c32bfaa6",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.4"
    },
    {
      "id": "5c046960-9ce4-312d-97d1-88db17a77431",
      "product": {
        "name": "Linux"
      },
      "product_version": "11b3b9f461c5c4f700f6c8da202fcc2fd6418e1f <2da5bffe9eaa5819a868e8eaaa11b3fd0f16a691"
    },
    {
      "id": "834b8e54-aa22-39b6-b9ee-5108528a7981",
      "product": {
        "name": "Linux"
      },
      "product_version": "6.3"
    },
    {
      "id": "b5abc6d6-4a7c-3030-a324-d050a2f82472",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.3.4"
    },
    {
      "id": "ebf71c8c-b404-39e7-9ca2-c001499aaaf7",
      "product": {
        "name": "Linux"
      },
      "product_version": "11b3b9f461c5c4f700f6c8da202fcc2fd6418e1f <c43a96fc00b662cef1ef0eb22d40441ce2abae8f"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "cc7dc3e7-fa6f-380d-a8bc-6d1d19b7235f",
      "vendor": {
        "name": "Linux"
      }
    }
  ],
  "cve": "CVE-2023-53351"
}