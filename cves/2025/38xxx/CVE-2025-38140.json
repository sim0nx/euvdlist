{
  "id": "EUVD-2025-19803",
  "enisaUuid": "3a8a8a11-2c20-3313-8075-f2dbe4876fd5",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm: limit swapping tables for devices with zone write plugs\n\ndm_revalidate_zones() only allowed new or previously unzoned devices to\ncall blk_revalidate_disk_zones(). If the device was already zoned,\ndisk->nr_zones would always equal md->nr_zones, so dm_revalidate_zones()\nreturned without doing any work. This would make the zoned settings for\nthe device not match the new table. If the device had zone write plug\nresources, it could run into errors like bdev_zone_is_seq() reading\ninvalid memory because disk->conv_zones_bitmap was the wrong size.\n\nIf the device doesn't have any zone write plug resources, calling\nblk_revalidate_disk_zones() will always correctly update device.  If\nblk_revalidate_disk_zones() fails, it can still overwrite or clear the\ncurrent disk->nr_zones value. In this case, DM must restore the previous\nvalue of disk->nr_zones, so that the zoned settings will continue to\nmatch the previous value that it fell back to.\n\nIf the device already has zone write plug resources,\nblk_revalidate_disk_zones() will not correctly update them, if it is\ncalled for arbitrary zoned device changes.  Since there is not much need\nfor this ability, the easiest solution is to disallow any table reloads\nthat change the zoned settings, for devices that already have zone plug\nresources.  Specifically, if a device already has zone plug resources\nallocated, it can only switch to another zoned table that also emulates\nzone append.  Also, it cannot change the device size or the zone size. A\ndevice can switch to an error target.",
  "datePublished": "Jul 3, 2025, 8:35:41 AM",
  "dateUpdated": "Jul 28, 2025, 4:13:19 AM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/ac8acb0bfd98a1c65f3ca9a3e217a766124eebd8",
    "https://git.kernel.org/stable/c/121218bef4c1df165181f5cd8fc3a2246bac817e"
  ],
  "aliases": [
    "CVE-2025-38140"
  ],
  "assigner": "Linux",
  "epss": 0.03,
  "enisaIdProduct": [
    {
      "id": "06eba13e-f51b-3b67-8a3e-5fbbd36141a5",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "073db52c-2299-32e1-a637-22239bc74b8f",
      "product": {
        "name": "Linux"
      },
      "product_version": "bb37d77239af25cde59693dbe3fac04dd17d7b29 <121218bef4c1df165181f5cd8fc3a2246bac817e"
    },
    {
      "id": "1a18b439-28a7-3e0f-8e2e-34237e8a26e9",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.16-rc1"
    },
    {
      "id": "20f2e322-36b8-3199-8d62-0ce6c5a66219",
      "product": {
        "name": "Linux"
      },
      "product_version": "5.14"
    },
    {
      "id": "6097908e-25be-3a09-b51f-c31a58980dd1",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.15.3"
    },
    {
      "id": "9250f6c3-b345-319a-931a-c6c8361f0827",
      "product": {
        "name": "Linux"
      },
      "product_version": "bb37d77239af25cde59693dbe3fac04dd17d7b29 <ac8acb0bfd98a1c65f3ca9a3e217a766124eebd8"
    },
    {
      "id": "afa7ddf6-8058-3dc6-91dd-f05643ee5c34",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.16"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "c4b747b1-48a6-3616-b7d8-2e5eefcfd666",
      "vendor": {
        "name": "Linux"
      }
    }
  ],
  "cve": "CVE-2025-38140"
}