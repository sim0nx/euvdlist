{
  "id": "EUVD-2021-1273",
  "enisaUuid": "1586d524-9863-33c5-a7ef-225312ef7644",
  "description": "tEnvoy contains the PGP, NaCl, and PBKDF2 in node.js and the browser (hashing, random, encryption, decryption, signatures, conversions), used by TogaTech.org. In versions prior to 7.0.3, the `verifyWithMessage` method of `tEnvoyNaClSigningKey` always returns `true` for any signature that has a SHA-512 hash matching the SHA-512 hash of the message even if the signature was invalid. This issue is patched in version 7.0.3. As a workaround: In `tenvoy.js` under the `verifyWithMessage` method definition within the `tEnvoyNaClSigningKey` class, ensure that the return statement call to `this.verify` ends in `.verified`.",
  "datePublished": "Jun 16, 2021, 12:25:11 AM",
  "dateUpdated": "Aug 3, 2024, 11:25:31 PM",
  "baseScore": 9.8,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "references": [
    "https://github.com/TogaTech/tEnvoy/security/advisories/GHSA-7r96-8g3x-g36m",
    "https://nvd.nist.gov/vuln/detail/CVE-2021-32685",
    "https://github.com/TogaTech/tEnvoy/commit/a121b34a45e289d775c62e58841522891dee686b",
    "https://github.com/TogaTech/tEnvoy/releases/tag/v7.0.3"
  ],
  "aliases": [
    "CVE-2021-32685",
    "GHSA-5w25-hxp5-h8c9"
  ],
  "assigner": "GitHub_M",
  "epss": 0.18,
  "enisaIdProduct": [
    {
      "id": "c7b178ae-be63-3ef1-8531-59f41c77c42f",
      "product": {
        "name": "tEnvoy"
      },
      "product_version": "< 7.0.3"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "13ba810d-db7a-3b0a-bbb9-5bd29b4224a1",
      "vendor": {
        "name": "TogaTech"
      }
    }
  ],
  "cve": "CVE-2021-32685"
}