{
  "id": "EUVD-2018-1777",
  "enisaUuid": "3eac2970-fdd2-3646-b928-8e42492d389f",
  "description": "libcurl 7.49.0 to and including 7.57.0 contains an out bounds read in code handling HTTP/2 trailers. It was reported (https://github.com/curl/curl/pull/2231) that reading an HTTP/2 trailer could mess up future trailers since the stored size was one byte less than required. The problem is that the code that creates HTTP/1-like headers from the HTTP/2 trailer data once appended a string like `:` to the target buffer, while this was recently changed to `: ` (a space was added after the colon) but the following math wasn't updated correspondingly. When accessed, the data is read out of bounds and causes either a crash or that the (too large) data gets passed to client write. This could lead to a denial-of-service situation or an information disclosure if someone has a service that echoes back or uses the trailers for something.",
  "datePublished": "Jan 24, 2018, 10:00:00 PM",
  "dateUpdated": "Aug 5, 2024, 12:33:49 PM",
  "baseScore": 9.1,
  "baseScoreVersion": "3.0",
  "baseScoreVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
  "references": [
    "https://www.suse.com/security/cve/CVE-2018-1000005.html",
    "https://www.debian.org/security/2018/dsa-4098",
    "https://access.redhat.com/errata/RHSA-2019:1543",
    "https://ubuntu.com/security/CVE-2018-1000005",
    "https://advisories.mageia.org/CVE-2018-1000005.html",
    "https://security.archlinux.org/CVE-2018-1000005",
    "https://alas.aws.amazon.com/cve/html/CVE-2018-1000005.html",
    "http://www.securitytracker.com/id/1040273",
    "https://usn.ubuntu.com/3554-1/",
    "https://curl.haxx.se/docs/adv_2018-824a.html",
    "https://github.com/curl/curl/pull/2231"
  ],
  "aliases": [
    "CVE-2018-1000005",
    "GSD-2018-1000005"
  ],
  "assigner": "mitre",
  "epss": 0.49,
  "enisaIdProduct": [
    {
      "id": "6a3d9142-03ef-36ca-a1d0-1fec57ff5878",
      "product": {
        "name": "n/a"
      },
      "product_version": "n/a"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "11ad6598-c03b-3a89-b0e7-71dd68bcb11f",
      "vendor": {
        "name": "n/a"
      }
    }
  ],
  "cve": "CVE-2018-1000005"
}