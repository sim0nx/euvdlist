{
  "id": "EUVD-2025-31504",
  "enisaUuid": "db56743a-02f8-3317-bf92-a0ea9912cc03",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfs: Fix unbuffered write error handling\n\nIf all the subrequests in an unbuffered write stream fail, the subrequest\ncollector doesn't update the stream->transferred value and it retains its\ninitial LONG_MAX value.  Unfortunately, if all active streams fail, then we\ntake the smallest value of { LONG_MAX, LONG_MAX, ... } as the value to set\nin wreq->transferred - which is then returned from ->write_iter().\n\nLONG_MAX was chosen as the initial value so that all the streams can be\nquickly assessed by taking the smallest value of all stream->transferred -\nbut this only works if we've set any of them.\n\nFix this by adding a flag to indicate whether the value in\nstream->transferred is valid and checking that when we integrate the\nvalues.  stream->transferred can then be initialised to zero.\n\nThis was found by running the generic/750 xfstest against cifs with\ncache=none.  It splices data to the target file.  Once (if) it has used up\nall the available scratch space, the writes start failing with ENOSPC.\nThis causes ->write_iter() to fail.  However, it was returning\nwreq->transferred, i.e. LONG_MAX, rather than an error (because it thought\nthe amount transferred was non-zero) and iter_file_splice_write() would\nthen try to clean up that amount of pipe bufferage - leading to an oops\nwhen it overran.  The kernel log showed:\n\n    CIFS: VFS: Send error in write = -28\n\nfollowed by:\n\n    BUG: kernel NULL pointer dereference, address: 0000000000000008\n\nwith:\n\n    RIP: 0010:iter_file_splice_write+0x3a4/0x520\n    do_splice+0x197/0x4e0\n\nor:\n\n    RIP: 0010:pipe_buf_release (include/linux/pipe_fs_i.h:282)\n    iter_file_splice_write (fs/splice.c:755)\n\nAlso put a warning check into splice to announce if ->write_iter() returned\nthat it had written more than it was asked to.",
  "datePublished": "Sep 5, 2025, 5:21:31 PM",
  "dateUpdated": "Sep 29, 2025, 5:58:10 AM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/f08c80af3c9a9849cd178b4843b7c01d103506a1",
    "https://git.kernel.org/stable/c/387164a2b97e1f5404c6d0049a7409bac7d2bc5b",
    "https://git.kernel.org/stable/c/a3de58b12ce074ec05b8741fa28d62ccb1070468"
  ],
  "aliases": [
    "CVE-2025-39723"
  ],
  "assigner": "Linux",
  "epss": 0.0,
  "enisaIdProduct": [
    {
      "id": "1a140400-a428-36e2-9f34-f31987e7f2f4",
      "product": {
        "name": "Linux"
      },
      "product_version": "6.10"
    },
    {
      "id": "401f4f51-225c-3882-9baf-28fe6a117e02",
      "product": {
        "name": "Linux"
      },
      "product_version": "288ace2f57c9d06dd2e42bd80d03747d879a4068 <f08c80af3c9a9849cd178b4843b7c01d103506a1"
    },
    {
      "id": "472d3637-b388-3787-8384-1ca28bc2921b",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "9fc0ed26-cb50-3df8-a0c6-96653af40453",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.16.4"
    },
    {
      "id": "dfc36043-8db1-3502-98db-09a8d0e21f68",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.17"
    },
    {
      "id": "f1e1bd03-5e45-3c8f-b228-1c4f4e99163c",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.12.44"
    },
    {
      "id": "f953bb63-c48c-39d0-aa6a-69b7f81d69ab",
      "product": {
        "name": "Linux"
      },
      "product_version": "288ace2f57c9d06dd2e42bd80d03747d879a4068 <a3de58b12ce074ec05b8741fa28d62ccb1070468"
    },
    {
      "id": "ff43e398-01b7-382f-af4b-db2b4622c1dd",
      "product": {
        "name": "Linux"
      },
      "product_version": "288ace2f57c9d06dd2e42bd80d03747d879a4068 <387164a2b97e1f5404c6d0049a7409bac7d2bc5b"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "44adac14-f519-39e4-99dd-15477c8a5858",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}