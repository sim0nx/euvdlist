{
  "id": "EUVD-2025-20036",
  "enisaUuid": "a75dceeb-9e84-36f3-993e-d577297522a6",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: only dirty folios when data journaling regular files\n\nfstest generic/388 occasionally reproduces a crash that looks as\nfollows:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000000\n...\nCall Trace:\n <TASK>\n ext4_block_zero_page_range+0x30c/0x380 [ext4]\n ext4_truncate+0x436/0x440 [ext4]\n ext4_process_orphan+0x5d/0x110 [ext4]\n ext4_orphan_cleanup+0x124/0x4f0 [ext4]\n ext4_fill_super+0x262d/0x3110 [ext4]\n get_tree_bdev_flags+0x132/0x1d0\n vfs_get_tree+0x26/0xd0\n vfs_cmd_create+0x59/0xe0\n __do_sys_fsconfig+0x4ed/0x6b0\n do_syscall_64+0x82/0x170\n ...\n\nThis occurs when processing a symlink inode from the orphan list. The\npartial block zeroing code in the truncate path calls\next4_dirty_journalled_data() -> folio_mark_dirty(). The latter calls\nmapping->a_ops->dirty_folio(), but symlink inodes are not assigned an\na_ops vector in ext4, hence the crash.\n\nTo avoid this problem, update the ext4_dirty_journalled_data() helper to\nonly mark the folio dirty on regular files (for which a_ops is\nassigned). This also matches the journaling logic in the ext4_symlink()\ncreation path, where ext4_handle_dirty_metadata() is called directly.",
  "datePublished": "Jul 4, 2025, 1:37:36 PM",
  "dateUpdated": "Jul 28, 2025, 4:15:30 AM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/cf6a4c4ac7b6e3214f25df594c9689a62f1bb456",
    "https://git.kernel.org/stable/c/be5f3061a6f904e3674257879e71881ceee5b673",
    "https://git.kernel.org/stable/c/d7af6eee8cd60f55aa8c5fe2b91f11ec0c9a0f27",
    "https://git.kernel.org/stable/c/e26268ff1dcae5662c1b96c35f18cfa6ab73d9de"
  ],
  "aliases": [
    "CVE-2025-38220"
  ],
  "assigner": "Linux",
  "epss": 0.03,
  "enisaIdProduct": [
    {
      "id": "0b9a3ca7-4e21-3baa-813c-33f8e968bac7",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.16-rc1"
    },
    {
      "id": "2351cc28-1719-33fa-a702-e676295b135d",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "2c3beb92-9346-3e46-994e-b6f19fbb2749",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.16"
    },
    {
      "id": "4d32461a-28e9-3a38-9654-9748c366ab1b",
      "product": {
        "name": "Linux"
      },
      "product_version": "d84c9ebdac1e39bc7b036c0c829ee8c1956edabc <d7af6eee8cd60f55aa8c5fe2b91f11ec0c9a0f27"
    },
    {
      "id": "58dc3033-b8fd-312f-96bb-720401ecf0c9",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.15.4"
    },
    {
      "id": "5e170682-fa80-3650-85db-f148f4d1473c",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.12.35"
    },
    {
      "id": "5e33e663-f786-3e97-9594-4646b06ea41f",
      "product": {
        "name": "Linux"
      },
      "product_version": "6.4"
    },
    {
      "id": "7cb7cd01-7529-392c-9037-4960713784fe",
      "product": {
        "name": "Linux"
      },
      "product_version": "d84c9ebdac1e39bc7b036c0c829ee8c1956edabc <e26268ff1dcae5662c1b96c35f18cfa6ab73d9de"
    },
    {
      "id": "9ebdb901-9b7a-3732-a8d9-90d6c9af6c70",
      "product": {
        "name": "Linux"
      },
      "product_version": "d84c9ebdac1e39bc7b036c0c829ee8c1956edabc <cf6a4c4ac7b6e3214f25df594c9689a62f1bb456"
    },
    {
      "id": "a8d45dc1-43fb-38d6-8105-b35efa9dee70",
      "product": {
        "name": "Linux"
      },
      "product_version": "d84c9ebdac1e39bc7b036c0c829ee8c1956edabc <be5f3061a6f904e3674257879e71881ceee5b673"
    },
    {
      "id": "b0c5521a-d6de-37c1-97db-6fcf4ca2996a",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.6.95"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "1aec10f5-5bc4-3a10-9978-6798b67887c6",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}