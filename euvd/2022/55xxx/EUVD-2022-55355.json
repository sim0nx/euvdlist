{
  "id": "EUVD-2022-55355",
  "enisaUuid": "4412fdf2-65c7-357d-ae66-3992acf58e9a",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: ensure pages are unlocked on cow_file_range() failure\n\nThere is a hung_task report on zoned btrfs like below.\n\nhttps://github.com/naota/linux/issues/59\n\n  [726.328648] INFO: task rocksdb:high0:11085 blocked for more than 241 seconds.\n  [726.329839]       Not tainted 5.16.0-rc1+ #1\n  [726.330484] \"echo 0 > /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n  [726.331603] task:rocksdb:high0   state:D stack:    0 pid:11085 ppid: 11082 flags:0x00000000\n  [726.331608] Call Trace:\n  [726.331611]  <TASK>\n  [726.331614]  __schedule+0x2e5/0x9d0\n  [726.331622]  schedule+0x58/0xd0\n  [726.331626]  io_schedule+0x3f/0x70\n  [726.331629]  __folio_lock+0x125/0x200\n  [726.331634]  ? find_get_entries+0x1bc/0x240\n  [726.331638]  ? filemap_invalidate_unlock_two+0x40/0x40\n  [726.331642]  truncate_inode_pages_range+0x5b2/0x770\n  [726.331649]  truncate_inode_pages_final+0x44/0x50\n  [726.331653]  btrfs_evict_inode+0x67/0x480\n  [726.331658]  evict+0xd0/0x180\n  [726.331661]  iput+0x13f/0x200\n  [726.331664]  do_unlinkat+0x1c0/0x2b0\n  [726.331668]  __x64_sys_unlink+0x23/0x30\n  [726.331670]  do_syscall_64+0x3b/0xc0\n  [726.331674]  entry_SYSCALL_64_after_hwframe+0x44/0xae\n  [726.331677] RIP: 0033:0x7fb9490a171b\n  [726.331681] RSP: 002b:00007fb943ffac68 EFLAGS: 00000246 ORIG_RAX: 0000000000000057\n  [726.331684] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fb9490a171b\n  [726.331686] RDX: 00007fb943ffb040 RSI: 000055a6bbe6ec20 RDI: 00007fb94400d300\n  [726.331687] RBP: 00007fb943ffad00 R08: 0000000000000000 R09: 0000000000000000\n  [726.331688] R10: 0000000000000031 R11: 0000000000000246 R12: 00007fb943ffb000\n  [726.331690] R13: 00007fb943ffb040 R14: 0000000000000000 R15: 00007fb943ffd260\n  [726.331693]  </TASK>\n\nWhile we debug the issue, we found running fstests generic/551 on 5GB\nnon-zoned null_blk device in the emulated zoned mode also had a\nsimilar hung issue.\n\nAlso, we can reproduce the same symptom with an error injected\ncow_file_range() setup.\n\nThe hang occurs when cow_file_range() fails in the middle of\nallocation. cow_file_range() called from do_allocation_zoned() can\nsplit the give region ([start, end]) for allocation depending on\ncurrent block group usages. When btrfs can allocate bytes for one part\nof the split regions but fails for the other region (e.g. because of\n-ENOSPC), we return the error leaving the pages in the succeeded regions\nlocked. Technically, this occurs only when @unlock == 0. Otherwise, we\nunlock the pages in an allocated region after creating an ordered\nextent.\n\nConsidering the callers of cow_file_range(unlock=0) won't write out\nthe pages, we can unlock the pages on error exit from\ncow_file_range(). So, we can ensure all the pages except @locked_page\nare unlocked on error case.\n\nIn summary, cow_file_range now behaves like this:\n\n- page_started == 1 (return value)\n  - All the pages are unlocked. IO is started.\n- unlock == 1\n  - All the pages except @locked_page are unlocked in any case\n- unlock == 0\n  - On success, all the pages are locked for writing out them\n  - On failure, all the pages except @locked_page are unlocked",
  "datePublished": "Jun 18, 2025, 11:02:29 AM",
  "dateUpdated": "Jun 18, 2025, 11:02:29 AM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/b367f125c80fa838eae49e3b138dc67dfc9f46ef",
    "https://git.kernel.org/stable/c/9535ec371d741fa037e37eddc0a5b25ba82d0027",
    "https://git.kernel.org/stable/c/e160aa87c87a9c4e0c8d1430235f715a3a91e2cd",
    "https://git.kernel.org/stable/c/9ce7466f372d83054c7494f6b3e4b9abaf3f0355"
  ],
  "aliases": [
    "CVE-2022-50089"
  ],
  "assigner": "Linux",
  "epss": 0.0,
  "enisaIdProduct": [
    {
      "id": "06250897-20e7-3cfe-a675-78c6170a399c",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.15.61"
    },
    {
      "id": "45df5dcb-02e6-31af-b740-a45f64a62474",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.18.18"
    },
    {
      "id": "663c14ad-d1fc-3965-a78e-be0193dce3b2",
      "product": {
        "name": "Linux"
      },
      "product_version": "42c011000963442ce533d92a492c4a057b2f5a46 <e160aa87c87a9c4e0c8d1430235f715a3a91e2cd"
    },
    {
      "id": "67699b17-492b-3c35-8c0a-1e1f91a5dec1",
      "product": {
        "name": "Linux"
      },
      "product_version": "42c011000963442ce533d92a492c4a057b2f5a46 <9ce7466f372d83054c7494f6b3e4b9abaf3f0355"
    },
    {
      "id": "71e670c0-84c4-3ec9-a36b-a16319a832f5",
      "product": {
        "name": "Linux"
      },
      "product_version": "42c011000963442ce533d92a492c4a057b2f5a46 <b367f125c80fa838eae49e3b138dc67dfc9f46ef"
    },
    {
      "id": "738ff728-f706-3e6a-af76-14e2dbc754cc",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.0"
    },
    {
      "id": "850b2077-2227-3d7b-ab42-b3d6f1a9a04c",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.19.2"
    },
    {
      "id": "9927d480-e916-3f11-b29f-8a4957ce6da9",
      "product": {
        "name": "Linux"
      },
      "product_version": "42c011000963442ce533d92a492c4a057b2f5a46 <9535ec371d741fa037e37eddc0a5b25ba82d0027"
    },
    {
      "id": "bf1794a2-49aa-3951-8dba-e3f3538809d1",
      "product": {
        "name": "Linux"
      },
      "product_version": "5.12"
    },
    {
      "id": "f8da69e1-9052-367b-b7a0-2e718feb26a9",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "1b05e694-6159-3c78-b819-68b931f12eb1",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}