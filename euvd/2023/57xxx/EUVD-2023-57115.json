{
  "id": "EUVD-2023-57115",
  "enisaUuid": "3ca0a992-90fb-3600-887c-4af0fadcf5c1",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: migrate: fix getting incorrect page mapping during page migration\n\nWhen running stress-ng testing, we found below kernel crash after a few hours:\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000000\npc : dentry_name+0xd8/0x224\nlr : pointer+0x22c/0x370\nsp : ffff800025f134c0\n......\nCall trace:\n  dentry_name+0xd8/0x224\n  pointer+0x22c/0x370\n  vsnprintf+0x1ec/0x730\n  vscnprintf+0x2c/0x60\n  vprintk_store+0x70/0x234\n  vprintk_emit+0xe0/0x24c\n  vprintk_default+0x3c/0x44\n  vprintk_func+0x84/0x2d0\n  printk+0x64/0x88\n  __dump_page+0x52c/0x530\n  dump_page+0x14/0x20\n  set_migratetype_isolate+0x110/0x224\n  start_isolate_page_range+0xc4/0x20c\n  offline_pages+0x124/0x474\n  memory_block_offline+0x44/0xf4\n  memory_subsys_offline+0x3c/0x70\n  device_offline+0xf0/0x120\n  ......\n\nAfter analyzing the vmcore, I found this issue is caused by page migration.\nThe scenario is that, one thread is doing page migration, and we will use the\ntarget page's ->mapping field to save 'anon_vma' pointer between page unmap and\npage move, and now the target page is locked and refcount is 1.\n\nCurrently, there is another stress-ng thread performing memory hotplug,\nattempting to offline the target page that is being migrated. It discovers that\nthe refcount of this target page is 1, preventing the offline operation, thus\nproceeding to dump the page. However, page_mapping() of the target page may\nreturn an incorrect file mapping to crash the system in dump_mapping(), since\nthe target page->mapping only saves 'anon_vma' pointer without setting\nPAGE_MAPPING_ANON flag.\n\nThere are seveval ways to fix this issue:\n(1) Setting the PAGE_MAPPING_ANON flag for target page's ->mapping when saving\n'anon_vma', but this can confuse PageAnon() for PFN walkers, since the target\npage has not built mappings yet.\n(2) Getting the page lock to call page_mapping() in __dump_page() to avoid crashing\nthe system, however, there are still some PFN walkers that call page_mapping()\nwithout holding the page lock, such as compaction.\n(3) Using target page->private field to save the 'anon_vma' pointer and 2 bits\npage state, just as page->mapping records an anonymous page, which can remove\nthe page_mapping() impact for PFN walkers and also seems a simple way.\n\nSo I choose option 3 to fix this issue, and this can also fix other potential\nissues for PFN walkers, such as compaction.",
  "datePublished": "Feb 29, 2024, 3:52:09 PM",
  "dateUpdated": "May 7, 2025, 8:02:34 PM",
  "baseScore": 5.5,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
  "references": [
    "https://git.kernel.org/stable/c/9128bfbc5c80d8f4874dd0a0424d1f5fb010df1b",
    "https://git.kernel.org/stable/c/3889a418b6eb9a1113fb989aaadecf2f64964767",
    "https://git.kernel.org/stable/c/d1adb25df7111de83b64655a80b5a135adbded61"
  ],
  "aliases": [
    "CVE-2023-52490",
    "GSD-2023-52490"
  ],
  "assigner": "Linux",
  "epss": 0.01,
  "enisaIdProduct": [
    {
      "id": "0f742111-f24a-39b8-a858-4368b21a94fa",
      "product": {
        "name": "Linux"
      },
      "product_version": "8ca5f0ea52e1eef5e7dcbdff1d1afe602764ea93"
    },
    {
      "id": "12f4edbd-bbc3-3780-8953-da7468038285",
      "product": {
        "name": "Linux"
      },
      "product_version": "64c8902ed4418317cd416c566f896bd4a92b2efc <3889a418b6eb9a1113fb989aaadecf2f64964767"
    },
    {
      "id": "38212b25-7d2e-363d-875d-60a355f07f47",
      "product": {
        "name": "Linux"
      }
    },
    {
      "id": "50f6e973-9c76-307e-a1c3-d755829235b6",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.8"
    },
    {
      "id": "80503b3b-c7bb-32d9-ad19-475a07983e0d",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.7.3"
    },
    {
      "id": "83cd9ea3-50a9-390d-bee1-48d16a3968cb",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "8c91c01d-0f48-32f5-8f5d-09ecf744ddb1",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.6.15"
    },
    {
      "id": "8ef75517-e1bf-3783-9bdf-912427c751bd",
      "product": {
        "name": "Linux"
      },
      "product_version": "6.3"
    },
    {
      "id": "ace6be60-0b20-3998-b7fd-9f82e0044c7e",
      "product": {
        "name": "Linux"
      },
      "product_version": "64c8902ed4418317cd416c566f896bd4a92b2efc <d1adb25df7111de83b64655a80b5a135adbded61"
    },
    {
      "id": "de6f5d72-8a26-3763-b562-9eea83f97f65",
      "product": {
        "name": "Linux"
      },
      "product_version": "64c8902ed4418317cd416c566f896bd4a92b2efc <9128bfbc5c80d8f4874dd0a0424d1f5fb010df1b"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "38212b25-7d2e-363d-875d-60a355f07f47",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}