{
  "id": "EUVD-2025-36488",
  "enisaUuid": "288434b0-ecc5-34d0-811c-d4cf09234fd9",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/ksm: fix flag-dropping behavior in ksm_madvise\n\nsyzkaller discovered the following crash: (kernel BUG)\n\n[   44.607039] ------------[ cut here ]------------\n[   44.607422] kernel BUG at mm/userfaultfd.c:2067!\n[   44.608148] Oops: invalid opcode: 0000 [#1] SMP DEBUG_PAGEALLOC KASAN NOPTI\n[   44.608814] CPU: 1 UID: 0 PID: 2475 Comm: reproducer Not tainted 6.16.0-rc6 #1 PREEMPT(none)\n[   44.609635] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014\n[   44.610695] RIP: 0010:userfaultfd_release_all+0x3a8/0x460\n\n<snip other registers, drop unreliable trace>\n\n[   44.617726] Call Trace:\n[   44.617926]  <TASK>\n[   44.619284]  userfaultfd_release+0xef/0x1b0\n[   44.620976]  __fput+0x3f9/0xb60\n[   44.621240]  fput_close_sync+0x110/0x210\n[   44.622222]  __x64_sys_close+0x8f/0x120\n[   44.622530]  do_syscall_64+0x5b/0x2f0\n[   44.622840]  entry_SYSCALL_64_after_hwframe+0x76/0x7e\n[   44.623244] RIP: 0033:0x7f365bb3f227\n\nKernel panics because it detects UFFD inconsistency during\nuserfaultfd_release_all().  Specifically, a VMA which has a valid pointer\nto vma->vm_userfaultfd_ctx, but no UFFD flags in vma->vm_flags.\n\nThe inconsistency is caused in ksm_madvise(): when user calls madvise()\nwith MADV_UNMEARGEABLE on a VMA that is registered for UFFD in MINOR mode,\nit accidentally clears all flags stored in the upper 32 bits of\nvma->vm_flags.\n\nAssuming x86_64 kernel build, unsigned long is 64-bit and unsigned int and\nint are 32-bit wide.  This setup causes the following mishap during the &=\n~VM_MERGEABLE assignment.\n\nVM_MERGEABLE is a 32-bit constant of type unsigned int, 0x8000'0000. \nAfter ~ is applied, it becomes 0x7fff'ffff unsigned int, which is then\npromoted to unsigned long before the & operation.  This promotion fills\nupper 32 bits with leading 0s, as we're doing unsigned conversion (and\neven for a signed conversion, this wouldn't help as the leading bit is 0).\n& operation thus ends up AND-ing vm_flags with 0x0000'0000'7fff'ffff\ninstead of intended 0xffff'ffff'7fff'ffff and hence accidentally clears\nthe upper 32-bits of its value.\n\nFix it by changing `VM_MERGEABLE` constant to unsigned long, using the\nBIT() macro.\n\nNote: other VM_* flags are not affected: This only happens to the\nVM_MERGEABLE flag, as the other VM_* flags are all constants of type int\nand after ~ operation, they end up with leading 1 and are thus converted\nto unsigned long with leading 1s.\n\nNote 2:\nAfter commit 31defc3b01d9 (\"userfaultfd: remove (VM_)BUG_ON()s\"), this is\nno longer a kernel BUG, but a WARNING at the same place:\n\n[   45.595973] WARNING: CPU: 1 PID: 2474 at mm/userfaultfd.c:2067\n\nbut the root-cause (flag-drop) remains the same.\n\n[akpm@linux-foundation.org: rust bindgen wasn't able to handle BIT(), from Miguel]",
  "datePublished": "Oct 28, 2025, 11:48:20 AM",
  "dateUpdated": "Oct 28, 2025, 11:48:20 AM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/92b82e232b8d8b116ac6e57aeae7a6033db92c60",
    "https://git.kernel.org/stable/c/ac50c6e0a8f91a02b681af81abb2362fbb67cc18",
    "https://git.kernel.org/stable/c/76385629f45740b7888f8fcd83bde955b10f61fe",
    "https://git.kernel.org/stable/c/f04aad36a07cc17b7a5d5b9a2d386ce6fae63e93",
    "https://nvd.nist.gov/vuln/detail/CVE-2025-40040"
  ],
  "aliases": [
    "CVE-2025-40040"
  ],
  "assigner": "Linux",
  "epss": 0.0,
  "enisaIdProduct": [
    {
      "id": "0f0c3369-554c-3f2a-89e6-f087b86fc941",
      "product": {
        "name": "Linux"
      },
      "product_version": "7677f7fd8be76659cd2d0db8ff4093bbb51c20e5 <76385629f45740b7888f8fcd83bde955b10f61fe"
    },
    {
      "id": "12af9f01-a627-3779-876e-b7663f363a50",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.12.55"
    },
    {
      "id": "14941b2c-7fad-375c-9f6a-b7ff838b472f",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.17.3"
    },
    {
      "id": "1dd331c9-25c7-3929-bef4-5d682c8ef20b",
      "product": {
        "name": "Linux"
      },
      "product_version": "5.13"
    },
    {
      "id": "357689d2-2b57-3e5b-9795-f47dfaf2497f",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "3d142e68-dde7-35fb-be20-86f1f59c72da",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.18-rc1"
    },
    {
      "id": "6f248e63-7ba7-3dbf-bd10-7d795160bb3a",
      "product": {
        "name": "Linux"
      },
      "product_version": "7677f7fd8be76659cd2d0db8ff4093bbb51c20e5 <f04aad36a07cc17b7a5d5b9a2d386ce6fae63e93"
    },
    {
      "id": "af4196c5-b814-31a5-9289-c8e51daf1dee",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.6.114"
    },
    {
      "id": "c7778cdb-124e-3735-9896-d62917c3dc3b",
      "product": {
        "name": "Linux"
      },
      "product_version": "7677f7fd8be76659cd2d0db8ff4093bbb51c20e5 <ac50c6e0a8f91a02b681af81abb2362fbb67cc18"
    },
    {
      "id": "cae635d8-a245-3a16-a4c7-41a32e5fff20",
      "product": {
        "name": "Linux"
      },
      "product_version": "7677f7fd8be76659cd2d0db8ff4093bbb51c20e5 <92b82e232b8d8b116ac6e57aeae7a6033db92c60"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "bcd4799b-942d-3be1-aaa6-5d760f40d6aa",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}