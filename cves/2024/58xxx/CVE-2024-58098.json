{
  "id": "EUVD-2025-13375",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: track changes_pkt_data property for global functions\n\nWhen processing calls to certain helpers, verifier invalidates all\npacket pointers in a current state. For example, consider the\nfollowing program:\n\n    __attribute__((__noinline__))\n    long skb_pull_data(struct __sk_buff *sk, __u32 len)\n    {\n        return bpf_skb_pull_data(sk, len);\n    }\n\n    SEC(\"tc\")\n    int test_invalidate_checks(struct __sk_buff *sk)\n    {\n        int *p = (void *)(long)sk->data;\n        if ((void *)(p + 1) > (void *)(long)sk->data_end) return TCX_DROP;\n        skb_pull_data(sk, 0);\n        *p = 42;\n        return TCX_PASS;\n    }\n\nAfter a call to bpf_skb_pull_data() the pointer 'p' can't be used\nsafely. See function filter.c:bpf_helper_changes_pkt_data() for a list\nof such helpers.\n\nAt the moment verifier invalidates packet pointers when processing\nhelper function calls, and does not traverse global sub-programs when\nprocessing calls to global sub-programs. This means that calls to\nhelpers done from global sub-programs do not invalidate pointers in\nthe caller state. E.g. the program above is unsafe, but is not\nrejected by verifier.\n\nThis commit fixes the omission by computing field\nbpf_subprog_info->changes_pkt_data for each sub-program before main\nverification pass.\nchanges_pkt_data should be set if:\n- subprogram calls helper for which bpf_helper_changes_pkt_data\n  returns true;\n- subprogram calls a global function,\n  for which bpf_subprog_info->changes_pkt_data should be set.\n\nThe verifier.c:check_cfg() pass is modified to compute this\ninformation. The commit relies on depth first instruction traversal\ndone by check_cfg() and absence of recursive function calls:\n- check_cfg() would eventually visit every call to subprogram S in a\n  state when S is fully explored;\n- when S is fully explored:\n  - every direct helper call within S is explored\n    (and thus changes_pkt_data is set if needed);\n  - every call to subprogram S1 called by S was visited with S1 fully\n    explored (and thus S inherits changes_pkt_data from S1).\n\nThe downside of such approach is that dead code elimination is not\ntaken into account: if a helper call inside global function is dead\nbecause of current configuration, verifier would conservatively assume\nthat the call occurs for the purpose of the changes_pkt_data\ncomputation.",
  "datePublished": "May 5, 2025, 2:53:32 PM",
  "dateUpdated": "May 9, 2025, 8:06:08 AM",
  "baseScore": 0.0,
  "references": [
    "https://nvd.nist.gov/vuln/detail/CVE-2024-58098",
    "https://git.kernel.org/stable/c/1d572c60488b52882b719ed273767ee3b280413d",
    "https://git.kernel.org/stable/c/51081a3f25c742da5a659d7fc6fd77ebfdd555be",
    "https://git.kernel.org/stable/c/79751e9227a5910c0e5a2c7186877d91821d957d"
  ],
  "aliases": [
    "CVE-2024-58098",
    "GHSA-mqrj-rhjj-jp5m"
  ],
  "assigner": "Linux",
  "epss": 0.02,
  "enisaIdProduct": [
    {
      "id": "08c0e4bd-9cb6-30ef-b29d-4355dcca68b5",
      "product": {
        "name": "Linux"
      },
      "product_version": "51c39bb1d5d105a02e29aa7960f0a395086e6342 <51081a3f25c742da5a659d7fc6fd77ebfdd555be"
    },
    {
      "id": "09481442-74eb-348a-bc78-e9278aade8bc",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.12.25"
    },
    {
      "id": "17664046-d05d-31b0-becc-8047717e0986",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.6.90"
    },
    {
      "id": "334c050e-2c4d-343f-b27f-2cb3ef611e1d",
      "product": {
        "name": "Linux"
      },
      "product_version": "5.6"
    },
    {
      "id": "35cd267e-4318-306a-8488-089996b38a8f",
      "product": {
        "name": "Linux"
      },
      "product_version": "51c39bb1d5d105a02e29aa7960f0a395086e6342 <1d572c60488b52882b719ed273767ee3b280413d"
    },
    {
      "id": "75b9cf43-9314-37c2-86e8-d2cdab454e89",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.13"
    },
    {
      "id": "9ae9a81e-464b-3a32-87c6-680aeb245673",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "f4380fb9-6012-3a0c-9720-7d992818261a",
      "product": {
        "name": "Linux"
      },
      "product_version": "51c39bb1d5d105a02e29aa7960f0a395086e6342 <79751e9227a5910c0e5a2c7186877d91821d957d"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "d516ab57-cbcf-3e92-bd96-10920a82d09e",
      "vendor": {
        "name": "Linux"
      }
    }
  ],
  "cve": "CVE-2024-58098"
}
