{
  "id": "EUVD-2025-2642",
  "enisaUuid": "17e22527-153e-3d7f-890c-9e94ecf861e6",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: zswap: properly synchronize freeing resources during CPU hotunplug\n\nIn zswap_compress() and zswap_decompress(), the per-CPU acomp_ctx of the\ncurrent CPU at the beginning of the operation is retrieved and used\nthroughout.  However, since neither preemption nor migration are disabled,\nit is possible that the operation continues on a different CPU.\n\nIf the original CPU is hotunplugged while the acomp_ctx is still in use,\nwe run into a UAF bug as some of the resources attached to the acomp_ctx\nare freed during hotunplug in zswap_cpu_comp_dead() (i.e. \nacomp_ctx.buffer, acomp_ctx.req, or acomp_ctx.acomp).\n\nThe problem was introduced in commit 1ec3b5fe6eec (\"mm/zswap: move to use\ncrypto_acomp API for hardware acceleration\") when the switch to the\ncrypto_acomp API was made.  Prior to that, the per-CPU crypto_comp was\nretrieved using get_cpu_ptr() which disables preemption and makes sure the\nCPU cannot go away from under us.  Preemption cannot be disabled with the\ncrypto_acomp API as a sleepable context is needed.\n\nUse the acomp_ctx.mutex to synchronize CPU hotplug callbacks allocating\nand freeing resources with compression/decompression paths.  Make sure\nthat acomp_ctx.req is NULL when the resources are freed.  In the\ncompression/decompression paths, check if acomp_ctx.req is NULL after\nacquiring the mutex (meaning the CPU was offlined) and retry on the new\nCPU.\n\nThe initialization of acomp_ctx.mutex is moved from the CPU hotplug\ncallback to the pool initialization where it belongs (where the mutex is\nallocated).  In addition to adding clarity, this makes sure that CPU\nhotplug cannot reinitialize a mutex that is already locked by\ncompression/decompression.\n\nPreviously a fix was attempted by holding cpus_read_lock() [1].  This\nwould have caused a potential deadlock as it is possible for code already\nholding the lock to fall into reclaim and enter zswap (causing a\ndeadlock).  A fix was also attempted using SRCU for synchronization, but\nJohannes pointed out that synchronize_srcu() cannot be used in CPU hotplug\nnotifiers [2].\n\nAlternative fixes that were considered/attempted and could have worked:\n- Refcounting the per-CPU acomp_ctx. This involves complexity in\n  handling the race between the refcount dropping to zero in\n  zswap_[de]compress() and the refcount being re-initialized when the\n  CPU is onlined.\n- Disabling migration before getting the per-CPU acomp_ctx [3], but\n  that's discouraged and is a much bigger hammer than needed, and could\n  result in subtle performance issues.\n\n[1]https://lkml.kernel.org/20241219212437.2714151-1-yosryahmed@google.com/\n[2]https://lkml.kernel.org/20250107074724.1756696-2-yosryahmed@google.com/\n[3]https://lkml.kernel.org/20250107222236.2715883-2-yosryahmed@google.com/\n\n[yosryahmed@google.com: remove comment]",
  "datePublished": "Feb 10, 2025, 3:58:49 PM",
  "dateUpdated": "Apr 16, 2025, 6:16:51 PM",
  "baseScore": 7.8,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
  "references": [
    "https://git.kernel.org/stable/c/8d29ff5d50304daa41dc3cfdda4a9d1e46cf5be1",
    "https://git.kernel.org/stable/c/12dcb0ef540629a281533f9dedc1b6b8e14cfb65",
    "https://nvd.nist.gov/vuln/detail/CVE-2025-21693"
  ],
  "aliases": [
    "CVE-2025-21693"
  ],
  "assigner": "Linux",
  "epss": 0.03,
  "enisaIdProduct": [
    {
      "id": "3ebad318-a664-32b9-a774-595fbfcb977a",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "6071bbe3-2b1f-3da1-88bd-43307e7cb843",
      "product": {
        "name": "Linux"
      },
      "product_version": "1ec3b5fe6eec782f4e5e0a80e4ce1909ffd5d161 <8d29ff5d50304daa41dc3cfdda4a9d1e46cf5be1"
    },
    {
      "id": "8d25bd1f-5a64-38d5-bff4-ed021fc96e59",
      "product": {
        "name": "Linux"
      },
      "product_version": "1ec3b5fe6eec782f4e5e0a80e4ce1909ffd5d161 <12dcb0ef540629a281533f9dedc1b6b8e14cfb65"
    },
    {
      "id": "9d487d4e-582d-3232-b5ce-9f92090e7875",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.13"
    },
    {
      "id": "ade84922-f5b4-38a1-b1f3-3fdf891b0db0",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.12.12"
    },
    {
      "id": "ec3f7dae-1963-3d49-a8cb-31cdadee68c2",
      "product": {
        "name": "Linux"
      },
      "product_version": "5.11"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "35b17311-e6cc-3163-a293-c8edb94e9428",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}