{
  "id": "EUVD-2022-55384",
  "enisaUuid": "726dafdb-1e38-380f-ae16-e62721483eeb",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/perf: Optimize clearing the pending PMI and remove WARN_ON for PMI check in power_pmu_disable\n\ncommit 2c9ac51b850d (\"powerpc/perf: Fix PMU callbacks to clear\npending PMI before resetting an overflown PMC\") added a new\nfunction \"pmi_irq_pending\" in hw_irq.h. This function is to check\nif there is a PMI marked as pending in Paca (PACA_IRQ_PMI).This is\nused in power_pmu_disable in a WARN_ON. The intention here is to\nprovide a warning if there is PMI pending, but no counter is found\noverflown.\n\nDuring some of the perf runs, below warning is hit:\n\nWARNING: CPU: 36 PID: 0 at arch/powerpc/perf/core-book3s.c:1332 power_pmu_disable+0x25c/0x2c0\n Modules linked in:\n -----\n\n NIP [c000000000141c3c] power_pmu_disable+0x25c/0x2c0\n LR [c000000000141c8c] power_pmu_disable+0x2ac/0x2c0\n Call Trace:\n [c000000baffcfb90] [c000000000141c8c] power_pmu_disable+0x2ac/0x2c0 (unreliable)\n [c000000baffcfc10] [c0000000003e2f8c] perf_pmu_disable+0x4c/0x60\n [c000000baffcfc30] [c0000000003e3344] group_sched_out.part.124+0x44/0x100\n [c000000baffcfc80] [c0000000003e353c] __perf_event_disable+0x13c/0x240\n [c000000baffcfcd0] [c0000000003dd334] event_function+0xc4/0x140\n [c000000baffcfd20] [c0000000003d855c] remote_function+0x7c/0xa0\n [c000000baffcfd50] [c00000000026c394] flush_smp_call_function_queue+0xd4/0x300\n [c000000baffcfde0] [c000000000065b24] smp_ipi_demux_relaxed+0xa4/0x100\n [c000000baffcfe20] [c0000000000cb2b0] xive_muxed_ipi_action+0x20/0x40\n [c000000baffcfe40] [c000000000207c3c] __handle_irq_event_percpu+0x8c/0x250\n [c000000baffcfee0] [c000000000207e2c] handle_irq_event_percpu+0x2c/0xa0\n [c000000baffcff10] [c000000000210a04] handle_percpu_irq+0x84/0xc0\n [c000000baffcff40] [c000000000205f14] generic_handle_irq+0x54/0x80\n [c000000baffcff60] [c000000000015740] __do_irq+0x90/0x1d0\n [c000000baffcff90] [c000000000016990] __do_IRQ+0xc0/0x140\n [c0000009732f3940] [c000000bafceaca8] 0xc000000bafceaca8\n [c0000009732f39d0] [c000000000016b78] do_IRQ+0x168/0x1c0\n [c0000009732f3a00] [c0000000000090c8] hardware_interrupt_common_virt+0x218/0x220\n\nThis means that there is no PMC overflown among the active events\nin the PMU, but there is a PMU pending in Paca. The function\n\"any_pmc_overflown\" checks the PMCs on active events in\ncpuhw->n_events. Code snippet:\n\n<<>>\nif (any_pmc_overflown(cpuhw))\n \tclear_pmi_irq_pending();\n else\n \tWARN_ON(pmi_irq_pending());\n<<>>\n\nHere the PMC overflown is not from active event. Example: When we do\nperf record, default cycles and instructions will be running on PMC6\nand PMC5 respectively. It could happen that overflowed event is currently\nnot active and pending PMI is for the inactive event. Debug logs from\ntrace_printk:\n\n<<>>\nany_pmc_overflown: idx is 5: pmc value is 0xd9a\npower_pmu_disable: PMC1: 0x0, PMC2: 0x0, PMC3: 0x0, PMC4: 0x0, PMC5: 0xd9a, PMC6: 0x80002011\n<<>>\n\nHere active PMC (from idx) is PMC5 , but overflown PMC is PMC6(0x80002011).\nWhen we handle PMI interrupt for such cases, if the PMC overflown is\nfrom inactive event, it will be ignored. Reference commit:\ncommit bc09c219b2e6 (\"powerpc/perf: Fix finding overflowed PMC in interrupt\")\n\nPatch addresses two changes:\n1) Fix 1 : Removal of warning ( WARN_ON(pmi_irq_pending()); )\n   We were printing warning if no PMC is found overflown among active PMU\n   events, but PMI pending in PACA. But this could happen in cases where\n   PMC overflown is not in active PMC. An inactive event could have caused\n   the overflow. Hence the warning is not needed. To know pending PMI is\n   from an inactive event, we need to loop through all PMC's which will\n   cause more SPR reads via mfspr and increase in context switch. Also in\n   existing function: perf_event_interrupt, already we ignore PMI's\n   overflown when it is from an inactive PMC.\n\n2) Fix 2: optimization in clearing pending PMI.\n   Currently we check for any active PMC overflown before clearing PMI\n   pending in Paca. This is causing additional SP\n---truncated---",
  "datePublished": "Jun 18, 2025, 11:02:48 AM",
  "dateUpdated": "Jun 18, 2025, 11:02:48 AM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/875b2bf469d094754ac2ba9af91dcd529eb12bf6",
    "https://git.kernel.org/stable/c/87b1a9175f08313f40fcb6d6dc536dbe451090eb",
    "https://git.kernel.org/stable/c/0a24ea26c3278216642a43291df7976a73a0a7ee",
    "https://git.kernel.org/stable/c/7e83af3dd4a3afca8f83ffde518cafd52f45b830",
    "https://git.kernel.org/stable/c/890005a7d98f7452cfe86dcfb2aeeb7df01132ce"
  ],
  "aliases": [
    "CVE-2022-50118"
  ],
  "assigner": "Linux",
  "epss": 0.04,
  "enisaIdProduct": [
    {
      "id": "15eae9b8-86e6-3c3e-a31b-53ff0b579cd1",
      "product": {
        "name": "Linux"
      },
      "product_version": "2c9ac51b850d84ee496b0a5d832ce66d411ae552 <0a24ea26c3278216642a43291df7976a73a0a7ee"
    },
    {
      "id": "24225bbb-b714-3610-9e33-f947c84f8c84",
      "product": {
        "name": "Linux"
      },
      "product_version": "fadcafa3959281ce2d96feedece8c75c3f95f8a5 <87b1a9175f08313f40fcb6d6dc536dbe451090eb"
    },
    {
      "id": "32598816-a764-369f-af83-71370fd80be4",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "4b859954-c32a-3c57-8eaa-4256aa9b10c1",
      "product": {
        "name": "Linux"
      },
      "product_version": "2c9ac51b850d84ee496b0a5d832ce66d411ae552 <890005a7d98f7452cfe86dcfb2aeeb7df01132ce"
    },
    {
      "id": "4e7d6c98-318d-3a35-a7cc-ae9e9aa5ad9d",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.10.137"
    },
    {
      "id": "55199b9d-6834-313a-a5e1-45f08b1b3ae8",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.0"
    },
    {
      "id": "5bb4af24-c59f-319d-95c1-68298790a3e3",
      "product": {
        "name": "Linux"
      },
      "product_version": "215a90ce3754fe509efbce6b73a4bb643c7e7528"
    },
    {
      "id": "7682d07b-8ac3-3bd6-b6b7-2ca5f72f2f13",
      "product": {
        "name": "Linux"
      },
      "product_version": "2c9ac51b850d84ee496b0a5d832ce66d411ae552 <7e83af3dd4a3afca8f83ffde518cafd52f45b830"
    },
    {
      "id": "9246019a-1313-390f-aab2-ba7ce2a2f694",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.18.18"
    },
    {
      "id": "954cc91c-c12c-3041-be23-68c8fb4ef0e4",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.15.61"
    },
    {
      "id": "a73ce7ad-4b03-3d7d-966d-1a6d5cdc4ba5",
      "product": {
        "name": "Linux"
      },
      "product_version": "5.17"
    },
    {
      "id": "b1779046-869a-3a37-af53-6ea1201d270c",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.19.2"
    },
    {
      "id": "c2cff833-775f-3522-ba9f-9ecd4d091c66",
      "product": {
        "name": "Linux"
      },
      "product_version": "ef798cd035f316a537fee8ed170c127f12407085 <875b2bf469d094754ac2ba9af91dcd529eb12bf6"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "cd74bf07-087e-3f89-aced-a456bdbc0f9d",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}