{
  "id": "EUVD-2025-27899",
  "enisaUuid": "62eb13e1-bc1f-35f8-9d27-1dccef3949b8",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: fix a UAF when vma->mm is freed after vma->vm_refcnt got dropped\n\nBy inducing delays in the right places, Jann Horn created a reproducer for\na hard to hit UAF issue that became possible after VMAs were allowed to be\nrecycled by adding SLAB_TYPESAFE_BY_RCU to their cache.\n\nRace description is borrowed from Jann's discovery report:\nlock_vma_under_rcu() looks up a VMA locklessly with mas_walk() under\nrcu_read_lock().  At that point, the VMA may be concurrently freed, and it\ncan be recycled by another process.  vma_start_read() then increments the\nvma->vm_refcnt (if it is in an acceptable range), and if this succeeds,\nvma_start_read() can return a recycled VMA.\n\nIn this scenario where the VMA has been recycled, lock_vma_under_rcu()\nwill then detect the mismatching ->vm_mm pointer and drop the VMA through\nvma_end_read(), which calls vma_refcount_put().  vma_refcount_put() drops\nthe refcount and then calls rcuwait_wake_up() using a copy of vma->vm_mm. \nThis is wrong: It implicitly assumes that the caller is keeping the VMA's\nmm alive, but in this scenario the caller has no relation to the VMA's mm,\nso the rcuwait_wake_up() can cause UAF.\n\nThe diagram depicting the race:\nT1         T2         T3\n==         ==         ==\nlock_vma_under_rcu\n  mas_walk\n          <VMA gets removed from mm>\n                      mmap\n                        <the same VMA is reallocated>\n  vma_start_read\n    __refcount_inc_not_zero_limited_acquire\n                      munmap\n                        __vma_enter_locked\n                          refcount_add_not_zero\n  vma_end_read\n    vma_refcount_put\n      __refcount_dec_and_test\n                          rcuwait_wait_event\n                            <finish operation>\n      rcuwait_wake_up [UAF]\n\nNote that rcuwait_wait_event() in T3 does not block because refcount was\nalready dropped by T1.  At this point T3 can exit and free the mm causing\nUAF in T1.\n\nTo avoid this we move vma->vm_mm verification into vma_start_read() and\ngrab vma->vm_mm to stabilize it before vma_refcount_put() operation.\n\n[surenb@google.com: v3]",
  "datePublished": "Aug 19, 2025, 5:02:33 PM",
  "dateUpdated": "Sep 29, 2025, 5:53:41 AM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/6e88fe54721dee17d3496bc998f0c7d243896348",
    "https://git.kernel.org/stable/c/1bcd236a2536a451e385f8d6d2bb589689ec812f",
    "https://git.kernel.org/stable/c/9bbffee67ffd16360179327b57f3b1245579ef08"
  ],
  "aliases": [
    "CVE-2025-38554"
  ],
  "assigner": "Linux",
  "epss": 0.0,
  "enisaIdProduct": [
    {
      "id": "01811127-d9a8-3fde-aca2-638d23d283b9",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.16.1"
    },
    {
      "id": "1d03d0e1-769f-3186-9b9d-a48243546d76",
      "product": {
        "name": "Linux"
      },
      "product_version": "3104138517fc66aad21f4a2487bb572e9fc2e3ec <6e88fe54721dee17d3496bc998f0c7d243896348"
    },
    {
      "id": "1fb26c53-7f6d-312a-8f4e-b216b7321853",
      "product": {
        "name": "Linux"
      },
      "product_version": "3104138517fc66aad21f4a2487bb572e9fc2e3ec <1bcd236a2536a451e385f8d6d2bb589689ec812f"
    },
    {
      "id": "274a8ddd-d5ae-3ca3-8bd0-bfc1d436081b",
      "product": {
        "name": "Linux"
      },
      "product_version": "6.15"
    },
    {
      "id": "2b281e44-7361-3b39-bf1b-1eec103e71dc",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.17"
    },
    {
      "id": "4aa76893-9269-35ce-9c7e-991e34b57165",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.17-rc1"
    },
    {
      "id": "9b8d2fef-d240-35aa-aa8a-b0bdbc69d88a",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.15.10"
    },
    {
      "id": "ad1ac008-9b1e-3c0e-9c3d-c6f02fec5f1b",
      "product": {
        "name": "Linux"
      },
      "product_version": "3104138517fc66aad21f4a2487bb572e9fc2e3ec <9bbffee67ffd16360179327b57f3b1245579ef08"
    },
    {
      "id": "e4ba7e18-37f8-3d85-b665-16ca689a145a",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "8b1743bf-fdc3-3a84-b9f7-731060659098",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}