{
  "id": "EUVD-2023-59757",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSquashfs: fix handling and sanity checking of xattr_ids count\n\nA Sysbot [1] corrupted filesystem exposes two flaws in the handling and\nsanity checking of the xattr_ids count in the filesystem.  Both of these\nflaws cause computation overflow due to incorrect typing.\n\nIn the corrupted filesystem the xattr_ids value is 4294967071, which\nstored in a signed variable becomes the negative number -225.\n\nFlaw 1 (64-bit systems only):\n\nThe signed integer xattr_ids variable causes sign extension.\n\nThis causes variable overflow in the SQUASHFS_XATTR_*(A) macros.  The\nvariable is first multiplied by sizeof(struct squashfs_xattr_id) where the\ntype of the sizeof operator is \"unsigned long\".\n\nOn a 64-bit system this is 64-bits in size, and causes the negative number\nto be sign extended and widened to 64-bits and then become unsigned.  This\nproduces the very large number 18446744073709548016 or 2^64 - 3600.  This\nnumber when rounded up by SQUASHFS_METADATA_SIZE - 1 (8191 bytes) and\ndivided by SQUASHFS_METADATA_SIZE overflows and produces a length of 0\n(stored in len).\n\nFlaw 2 (32-bit systems only):\n\nOn a 32-bit system the integer variable is not widened by the unsigned\nlong type of the sizeof operator (32-bits), and the signedness of the\nvariable has no effect due it always being treated as unsigned.\n\nThe above corrupted xattr_ids value of 4294967071, when multiplied\noverflows and produces the number 4294963696 or 2^32 - 3400.  This number\nwhen rounded up by SQUASHFS_METADATA_SIZE - 1 (8191 bytes) and divided by\nSQUASHFS_METADATA_SIZE overflows again and produces a length of 0.\n\nThe effect of the 0 length computation:\n\nIn conjunction with the corrupted xattr_ids field, the filesystem also has\na corrupted xattr_table_start value, where it matches the end of\nfilesystem value of 850.\n\nThis causes the following sanity check code to fail because the\nincorrectly computed len of 0 matches the incorrect size of the table\nreported by the superblock (0 bytes).\n\n    len = SQUASHFS_XATTR_BLOCK_BYTES(*xattr_ids);\n    indexes = SQUASHFS_XATTR_BLOCKS(*xattr_ids);\n\n    /*\n     * The computed size of the index table (len bytes) should exactly\n     * match the table start and end points\n    */\n    start = table_start + sizeof(*id_table);\n    end = msblk->bytes_used;\n\n    if (len != (end - start))\n            return ERR_PTR(-EINVAL);\n\nChanging the xattr_ids variable to be \"usigned int\" fixes the flaw on a\n64-bit system.  This relies on the fact the computation is widened by the\nunsigned long type of the sizeof operator.\n\nCasting the variable to u64 in the above macro fixes this flaw on a 32-bit\nsystem.\n\nIt also means 64-bit systems do not implicitly rely on the type of the\nsizeof operator to widen the computation.\n\n[1] https://lore.kernel.org/lkml/000000000000cd44f005f1a0f17f@google.com/",
  "datePublished": "Mar 27, 2025, 4:37:14 PM",
  "dateUpdated": "Mar 27, 2025, 4:37:14 PM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/7fe583c9bec10cd4b76231c51b37f3e4ca646e01",
    "https://git.kernel.org/stable/c/b38c3e9e0adc01956cc3e5a52e4d3f92f79d88e2",
    "https://git.kernel.org/stable/c/1369322c1de52c7b9b988b95c9903110a4566778",
    "https://git.kernel.org/stable/c/5c4d4a83bf1a862d80c1efff1c6e3ce33b501e2e",
    "https://git.kernel.org/stable/c/997bed0f3cde78a3e639d624985bf4a95cf767e6",
    "https://git.kernel.org/stable/c/a7da7d01ac5ce9b369a1ac70e1197999cc6c9686",
    "https://git.kernel.org/stable/c/f65c4bbbd682b0877b669828b4e033b8d5d0a2dc"
  ],
  "aliases": [
    "CVE-2023-52933"
  ],
  "assigner": "Linux",
  "epss": 0.1,
  "enisaIdProduct": [
    {
      "id": "3ddcb6d8-7cc7-3919-b350-ac4b5b0fdc9e",
      "product": {
        "name": "Linux"
      },
      "product_version": "506220d2ba21791314af569211ffd8870b8208fa <f65c4bbbd682b0877b669828b4e033b8d5d0a2dc"
    },
    {
      "id": "5effe43b-7225-34e2-905c-e572c830b682",
      "product": {
        "name": "Linux"
      },
      "product_version": "ff49cace7b8cf00d27665f7536a863d406963d06 <7fe583c9bec10cd4b76231c51b37f3e4ca646e01"
    },
    {
      "id": "6296412c-9bb3-3a3a-9c17-3f8a6e24fc50",
      "product": {
        "name": "Linux"
      },
      "product_version": "506220d2ba21791314af569211ffd8870b8208fa <a7da7d01ac5ce9b369a1ac70e1197999cc6c9686"
    },
    {
      "id": "685495e5-c891-37be-a269-2f474467f23a",
      "product": {
        "name": "Linux"
      },
      "product_version": "a8717b34003f4f7353b23826617ad872f85d85d8 <b38c3e9e0adc01956cc3e5a52e4d3f92f79d88e2"
    },
    {
      "id": "8bdcc91a-8b73-386a-a128-116a8519d3b8",
      "product": {
        "name": "Linux"
      },
      "product_version": "bddcce15cd1fb9675ddd46a76d8fe2d0a571313b <5c4d4a83bf1a862d80c1efff1c6e3ce33b501e2e"
    },
    {
      "id": "b2fd8ef9-b588-3c90-98be-2e84d87708a9",
      "product": {
        "name": "Linux"
      },
      "product_version": "5.11"
    },
    {
      "id": "bf2b2973-c8f5-319a-88a4-bf8b51634e13",
      "product": {
        "name": "Linux"
      },
      "product_version": "3654a0ed0bdc6d70502bfc7c9fec9f1e243dfcad <1369322c1de52c7b9b988b95c9903110a4566778"
    },
    {
      "id": "dab3d706-2105-3fbc-892f-874705ffe072",
      "product": {
        "name": "Linux"
      },
      "product_version": "506220d2ba21791314af569211ffd8870b8208fa <997bed0f3cde78a3e639d624985bf4a95cf767e6"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "fd3c786b-d4f5-33de-9696-73df1df9ceaa",
      "vendor": {
        "name": "Linux"
      }
    }
  ],
  "cve": "CVE-2023-52933"
}
