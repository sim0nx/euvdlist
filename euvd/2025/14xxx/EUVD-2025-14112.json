{
  "id": "EUVD-2025-14112",
  "enisaUuid": "bf979bf9-6155-308e-aaa7-78ae8e5df430",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/core: Fix WARN_ON(!ctx) in __free_event() for partial init\n\nMove the get_ctx(child_ctx) call and the child_event->ctx assignment to\noccur immediately after the child event is allocated. Ensure that\nchild_event->ctx is non-NULL before any subsequent error path within\ninherit_event calls free_event(), satisfying the assumptions of the\ncleanup code.\n\nDetails:\n\nThere's no clear Fixes tag, because this bug is a side-effect of\nmultiple interacting commits over time (up to 15 years old), not\na single regression.\n\nThe code initially incremented refcount then assigned context\nimmediately after the child_event was created. Later, an early\nvalidity check for child_event was added before the\nrefcount/assignment. Even later, a WARN_ON_ONCE() cleanup check was\nadded, assuming event->ctx is valid if the pmu_ctx is valid.\nThe problem is that the WARN_ON_ONCE() could trigger after the initial\ncheck passed but before child_event->ctx was assigned, violating its\nprecondition. The solution is to assign child_event->ctx right after\nits initial validation. This ensures the context exists for any\nsubsequent checks or cleanup routines, resolving the WARN_ON_ONCE().\n\nTo resolve it, defer the refcount update and child_event->ctx assignment\ndirectly after child_event->pmu_ctx is set but before checking if the\nparent event is orphaned. The cleanup routine depends on\nevent->pmu_ctx being non-NULL before it verifies event->ctx is\nnon-NULL. This also maintains the author's original intent of passing\nin child_ctx to find_get_pmu_context before its refcount/assignment.\n\n[ mingo: Expanded the changelog from another email by Gabriel Shahrouzi. ]",
  "datePublished": "May 9, 2025, 6:45:42 AM",
  "dateUpdated": "May 9, 2025, 6:45:42 AM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/1fe9b92eede32574dbe05b5bdb6ad666b350bed0",
    "https://git.kernel.org/stable/c/90dc6c1e3b200812da8d0aa030e1b7fda8226d0e",
    "https://git.kernel.org/stable/c/cb56cd11feabf99e08bc18960700a53322ffcea7",
    "https://git.kernel.org/stable/c/0ba3a4ab76fd3367b9cb680cad70182c896c795c"
  ],
  "aliases": [
    "CVE-2025-37878"
  ],
  "assigner": "Linux",
  "epss": 0.04,
  "enisaIdProduct": [
    {
      "id": "6df5ab59-1638-3c67-bfa5-67a96dfae55e",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.6.89"
    },
    {
      "id": "80ab43ef-c522-3b18-84ef-24005daa25d5",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <90dc6c1e3b200812da8d0aa030e1b7fda8226d0e"
    },
    {
      "id": "99146986-f913-3c20-acea-dc0d7f400dce",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.15-rc2"
    },
    {
      "id": "9b3e7037-4737-32d3-bea7-1ea59d1099e0",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.12.26"
    },
    {
      "id": "9c0b9a10-6bbe-3aaa-adc5-66f07ca0535f",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <1fe9b92eede32574dbe05b5bdb6ad666b350bed0"
    },
    {
      "id": "c6de852e-1a6f-32a0-ad24-ea1f681f54ba",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <cb56cd11feabf99e08bc18960700a53322ffcea7"
    },
    {
      "id": "e2b17b12-528f-370c-9819-47ae3cae5135",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.14.5"
    },
    {
      "id": "e586c881-afaf-3686-b203-6abd2ba1e022",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <0ba3a4ab76fd3367b9cb680cad70182c896c795c"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "c3a7ae6d-b168-3d7f-8c8e-b37c9bc3d286",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}