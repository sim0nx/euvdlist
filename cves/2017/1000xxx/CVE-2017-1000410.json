{
  "id": "EUVD-2017-1549",
  "enisaUuid": "5eccb7a0-92e4-3f4f-8f36-9317d5f664ee",
  "description": "The Linux kernel version 3.3-rc1 and later is affected by a vulnerability lies in the processing of incoming L2CAP commands - ConfigRequest, and ConfigResponse messages. This info leak is a result of uninitialized stack variables that may be returned to an attacker in their uninitialized state. By manipulating the code flows that precede the handling of these configuration messages, an attacker can also gain some control over which data will be held in the uninitialized stack variables. This can allow him to bypass KASLR, and stack canaries protection - as both pointers and stack canaries may be leaked in this manner. Combining this vulnerability (for example) with the previously disclosed RCE vulnerability in L2CAP configuration parsing (CVE-2017-1000251) may allow an attacker to exploit the RCE against kernels which were built with the above mitigations. These are the specifics of this vulnerability: In the function l2cap_parse_conf_rsp and in the function l2cap_parse_conf_req the following variable is declared without initialization: struct l2cap_conf_efs efs; In addition, when parsing input configuration parameters in both of these functions, the switch case for handling EFS elements may skip the memcpy call that will write to the efs variable: ... case L2CAP_CONF_EFS: if (olen == sizeof(efs)) memcpy(&efs, (void *)val, olen); ... The olen in the above if is attacker controlled, and regardless of that if, in both of these functions the efs variable would eventually be added to the outgoing configuration request that is being built: l2cap_add_conf_opt(&ptr, L2CAP_CONF_EFS, sizeof(efs), (unsigned long) &efs); So by sending a configuration request, or response, that contains an L2CAP_CONF_EFS element, but with an element length that is not sizeof(efs) - the memcpy to the uninitialized efs variable can be avoided, and the uninitialized variable would be returned to the attacker (16 bytes).",
  "datePublished": "Dec 7, 2017, 7:00:00 PM",
  "dateUpdated": "Aug 5, 2024, 10:00:41 PM",
  "baseScore": 7.5,
  "baseScoreVersion": "3.0",
  "baseScoreVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
  "references": [
    "https://www.suse.com/security/cve/CVE-2017-1000410.html",
    "https://www.debian.org/security/2018/dsa-4082",
    "https://www.debian.org/security/2017/dsa-4073",
    "https://access.redhat.com/errata/RHSA-2018:1319",
    "https://access.redhat.com/errata/RHSA-2018:1170",
    "https://access.redhat.com/errata/RHSA-2018:1130",
    "https://access.redhat.com/errata/RHSA-2018:1062",
    "https://access.redhat.com/errata/RHSA-2018:0676",
    "https://access.redhat.com/errata/RHSA-2018:0654",
    "https://ubuntu.com/security/CVE-2017-1000410",
    "https://advisories.mageia.org/CVE-2017-1000410.html",
    "https://security.archlinux.org/CVE-2017-1000410",
    "https://linux.oracle.com/cve/CVE-2017-1000410.html",
    "http://seclists.org/oss-sec/2017/q4/357",
    "https://help.ecostruxureit.com/display/public/UADCE725/Security+fixes+in+StruxureWare+Data+Center+Expert+v7.6.0",
    "http://www.securityfocus.com/bid/102101",
    "https://usn.ubuntu.com/3933-2/",
    "https://usn.ubuntu.com/3933-1/"
  ],
  "aliases": [
    "CVE-2017-1000410",
    "GSD-2017-1000410"
  ],
  "assigner": "mitre",
  "epss": 1.92,
  "enisaIdProduct": [
    {
      "id": "c3a4ac3a-6fcb-39aa-9e0f-650b86a51d34",
      "product": {
        "name": "n/a"
      },
      "product_version": "n/a"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "0ab70774-f95b-31de-90f6-c4de4dd9a3d2",
      "vendor": {
        "name": "n/a"
      }
    }
  ],
  "cve": "CVE-2017-1000410"
}