{
  "id": "EUVD-2025-22630",
  "enisaUuid": "7be17087-98b2-3c11-94d1-d5c2c7df5074",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/mlx5: Fix potential deadlock in MR deregistration\n\nThe issue arises when kzalloc() is invoked while holding umem_mutex or\nany other lock acquired under umem_mutex. This is problematic because\nkzalloc() can trigger fs_reclaim_aqcuire(), which may, in turn, invoke\nmmu_notifier_invalidate_range_start(). This function can lead to\nmlx5_ib_invalidate_range(), which attempts to acquire umem_mutex again,\nresulting in a deadlock.\n\nThe problematic flow:\n             CPU0                      |              CPU1\n---------------------------------------|------------------------------------------------\nmlx5_ib_dereg_mr()                     |\n \u2192 revoke_mr()                         |\n   \u2192 mutex_lock(&umem_odp->umem_mutex) |\n                                       | mlx5_mkey_cache_init()\n                                       |  \u2192 mutex_lock(&dev->cache.rb_lock)\n                                       |  \u2192 mlx5r_cache_create_ent_locked()\n                                       |    \u2192 kzalloc(GFP_KERNEL)\n                                       |      \u2192 fs_reclaim()\n                                       |        \u2192 mmu_notifier_invalidate_range_start()\n                                       |          \u2192 mlx5_ib_invalidate_range()\n                                       |            \u2192 mutex_lock(&umem_odp->umem_mutex)\n   \u2192 cache_ent_find_and_store()        |\n     \u2192 mutex_lock(&dev->cache.rb_lock) |\n\nAdditionally, when kzalloc() is called from within\ncache_ent_find_and_store(), we encounter the same deadlock due to\nre-acquisition of umem_mutex.\n\nSolve by releasing umem_mutex in dereg_mr() after umr_revoke_mr()\nand before acquiring rb_lock. This ensures that we don't hold\numem_mutex while performing memory allocations that could trigger\nthe reclaim path.\n\nThis change prevents the deadlock by ensuring proper lock ordering and\navoiding holding locks during memory allocation operations that could\ntrigger the reclaim path.\n\nThe following lockdep warning demonstrates the deadlock:\n\n python3/20557 is trying to acquire lock:\n ffff888387542128 (&umem_odp->umem_mutex){+.+.}-{4:4}, at:\n mlx5_ib_invalidate_range+0x5b/0x550 [mlx5_ib]\n\n but task is already holding lock:\n ffffffff82f6b840 (mmu_notifier_invalidate_range_start){+.+.}-{0:0}, at:\n unmap_vmas+0x7b/0x1a0\n\n which lock already depends on the new lock.\n\n the existing dependency chain (in reverse order) is:\n\n -> #3 (mmu_notifier_invalidate_range_start){+.+.}-{0:0}:\n       fs_reclaim_acquire+0x60/0xd0\n       mem_cgroup_css_alloc+0x6f/0x9b0\n       cgroup_init_subsys+0xa4/0x240\n       cgroup_init+0x1c8/0x510\n       start_kernel+0x747/0x760\n       x86_64_start_reservations+0x25/0x30\n       x86_64_start_kernel+0x73/0x80\n       common_startup_64+0x129/0x138\n\n -> #2 (fs_reclaim){+.+.}-{0:0}:\n       fs_reclaim_acquire+0x91/0xd0\n       __kmalloc_cache_noprof+0x4d/0x4c0\n       mlx5r_cache_create_ent_locked+0x75/0x620 [mlx5_ib]\n       mlx5_mkey_cache_init+0x186/0x360 [mlx5_ib]\n       mlx5_ib_stage_post_ib_reg_umr_init+0x3c/0x60 [mlx5_ib]\n       __mlx5_ib_add+0x4b/0x190 [mlx5_ib]\n       mlx5r_probe+0xd9/0x320 [mlx5_ib]\n       auxiliary_bus_probe+0x42/0x70\n       really_probe+0xdb/0x360\n       __driver_probe_device+0x8f/0x130\n       driver_probe_device+0x1f/0xb0\n       __driver_attach+0xd4/0x1f0\n       bus_for_each_dev+0x79/0xd0\n       bus_add_driver+0xf0/0x200\n       driver_register+0x6e/0xc0\n       __auxiliary_driver_register+0x6a/0xc0\n       do_one_initcall+0x5e/0x390\n       do_init_module+0x88/0x240\n       init_module_from_file+0x85/0xc0\n       idempotent_init_module+0x104/0x300\n       __x64_sys_finit_module+0x68/0xc0\n       do_syscall_64+0x6d/0x140\n       entry_SYSCALL_64_after_hwframe+0x4b/0x53\n\n -> #1 (&dev->cache.rb_lock){+.+.}-{4:4}:\n       __mutex_lock+0x98/0xf10\n       __mlx5_ib_dereg_mr+0x6f2/0x890 [mlx5_ib]\n       mlx5_ib_dereg_mr+0x21/0x110 [mlx5_ib]\n       ib_dereg_mr_user+0x85/0x1f0 [ib_core]\n  \n---truncated---",
  "datePublished": "Jul 25, 2025, 12:53:16 PM",
  "dateUpdated": "Jul 28, 2025, 4:20:18 AM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/beb89ada5715e7bd1518c58863eedce89ec051a7",
    "https://git.kernel.org/stable/c/727eb1be65a370572edf307558ec3396b8573156",
    "https://git.kernel.org/stable/c/2ed25aa7f7711f508b6120e336f05cd9d49943c0"
  ],
  "aliases": [
    "CVE-2025-38373"
  ],
  "assigner": "Linux",
  "epss": 0.02,
  "enisaIdProduct": [
    {
      "id": "4f0e0a3e-58b9-3680-854d-b37d7eb6a645",
      "product": {
        "name": "Linux"
      },
      "product_version": "b13d32786acabf70a7b04ed24b7468fc3c82977c <beb89ada5715e7bd1518c58863eedce89ec051a7"
    },
    {
      "id": "58501cdc-d8f9-374d-9b5f-63b48eaa792b",
      "product": {
        "name": "Linux"
      },
      "product_version": "abb604a1a9c87255c7a6f3b784410a9707baf467 <727eb1be65a370572edf307558ec3396b8573156"
    },
    {
      "id": "58b92441-4fb9-3e5c-ae11-8291f2d34ca2",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.12.37"
    },
    {
      "id": "5fb7c673-ac7c-3cb4-95bd-641a9e003fcf",
      "product": {
        "name": "Linux"
      },
      "product_version": "5297f5ddffef47b94172ab0d3d62270002a3dcc1"
    },
    {
      "id": "6d51e93d-dafa-3309-ad90-09f9e1a8498e",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.16"
    },
    {
      "id": "7e8cd1cc-70ee-3961-af30-9344864d8114",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.16-rc5"
    },
    {
      "id": "87d83f30-5962-35ca-ab5c-dcbbc4a8dce2",
      "product": {
        "name": "Linux"
      },
      "product_version": "abb604a1a9c87255c7a6f3b784410a9707baf467 <2ed25aa7f7711f508b6120e336f05cd9d49943c0"
    },
    {
      "id": "907967f5-abc3-3da2-bce1-ee714f4faf3a",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.15.6"
    },
    {
      "id": "b2a156ce-7019-39dd-b047-9e0811a1cf69",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "d5269f30-a0ea-3aa3-97b8-db40ee62f040",
      "product": {
        "name": "Linux"
      },
      "product_version": "6.14"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "73274eee-b07d-314c-8699-00ac45a4b7b5",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}