{
  "id": "EUVD-2025-32324",
  "enisaUuid": "a4513851-ced4-31a1-b30c-d03f9b822ecb",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: reject unhashed sockets in bpf_sk_assign\n\nThe semantics for bpf_sk_assign are as follows:\n\n    sk = some_lookup_func()\n    bpf_sk_assign(skb, sk)\n    bpf_sk_release(sk)\n\nThat is, the sk is not consumed by bpf_sk_assign. The function\ntherefore needs to make sure that sk lives long enough to be\nconsumed from __inet_lookup_skb. The path through the stack for a\nTCPv4 packet is roughly:\n\n  netif_receive_skb_core: takes RCU read lock\n    __netif_receive_skb_core:\n      sch_handle_ingress:\n        tcf_classify:\n          bpf_sk_assign()\n      deliver_ptype_list_skb:\n        deliver_skb:\n          ip_packet_type->func == ip_rcv:\n            ip_rcv_core:\n            ip_rcv_finish_core:\n              dst_input:\n                ip_local_deliver:\n                  ip_local_deliver_finish:\n                    ip_protocol_deliver_rcu:\n                      tcp_v4_rcv:\n                        __inet_lookup_skb:\n                          skb_steal_sock\n\nThe existing helper takes advantage of the fact that everything\nhappens in the same RCU critical section: for sockets with\nSOCK_RCU_FREE set bpf_sk_assign never takes a reference.\nskb_steal_sock then checks SOCK_RCU_FREE again and does sock_put\nif necessary.\n\nThis approach assumes that SOCK_RCU_FREE is never set on a sk\nbetween bpf_sk_assign and skb_steal_sock, but this invariant is\nviolated by unhashed UDP sockets. A new UDP socket is created\nin TCP_CLOSE state but without SOCK_RCU_FREE set. That flag is only\nadded in udp_lib_get_port() which happens when a socket is bound.\n\nWhen bpf_sk_assign was added it wasn't possible to access unhashed\nUDP sockets from BPF, so this wasn't a problem. This changed\nin commit 0c48eefae712 (\"sock_map: Lift socket state restriction\nfor datagram sockets\"), but the helper wasn't adjusted accordingly.\nThe following sequence of events will therefore lead to a refcount\nleak:\n\n1. Add socket(AF_INET, SOCK_DGRAM) to a sockmap.\n2. Pull socket out of sockmap and bpf_sk_assign it. Since\n   SOCK_RCU_FREE is not set we increment the refcount.\n3. bind() or connect() the socket, setting SOCK_RCU_FREE.\n4. skb_steal_sock will now set refcounted = false due to\n   SOCK_RCU_FREE.\n5. tcp_v4_rcv() skips sock_put().\n\nFix the problem by rejecting unhashed sockets in bpf_sk_assign().\nThis matches the behaviour of __inet_lookup_skb which is ultimately\nthe goal of bpf_sk_assign().",
  "datePublished": "Oct 4, 2025, 3:44:01 PM",
  "dateUpdated": "Oct 4, 2025, 3:44:01 PM",
  "baseScore": 0.0,
  "references": [
    "https://nvd.nist.gov/vuln/detail/CVE-2023-53585",
    "https://git.kernel.org/stable/c/3d4522f59fb748a54446846522941a4f09da63e9",
    "https://git.kernel.org/stable/c/67312adc96b5a585970d03b62412847afe2c6b01",
    "https://git.kernel.org/stable/c/791a12102e5191dcb6ce0b3a99d71b5a2802d12a",
    "https://git.kernel.org/stable/c/7dcbc0bb0e5cc1823923744befce59ac353135e6",
    "https://git.kernel.org/stable/c/8aa43cfbb68b25119d2ced14ec717173e2901fa2",
    "https://git.kernel.org/stable/c/c0ce0fb76610d5fad31f56f2ca8241a2a6717a1b"
  ],
  "aliases": [
    "CVE-2023-53585",
    "GHSA-39wr-crm4-gxmv"
  ],
  "assigner": "Linux",
  "epss": 0.02,
  "enisaIdProduct": [
    {
      "id": "063ee2fb-0364-3a7e-9328-b7d7362bb44f",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.6"
    },
    {
      "id": "178892db-0a48-3064-931b-0770e5cd53ff",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.15.132"
    },
    {
      "id": "20c5643b-79bc-3dce-8db1-58b58c8d622d",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.4.16"
    },
    {
      "id": "2e18c263-c0fd-307a-8f07-91c4db212903",
      "product": {
        "name": "Linux"
      },
      "product_version": "cf7fbe660f2dbd738ab58aea8e9b0ca6ad232449 <791a12102e5191dcb6ce0b3a99d71b5a2802d12a"
    },
    {
      "id": "40573c04-7d2a-3975-886e-c22b10a7e351",
      "product": {
        "name": "Linux"
      },
      "product_version": "cf7fbe660f2dbd738ab58aea8e9b0ca6ad232449 <3d4522f59fb748a54446846522941a4f09da63e9"
    },
    {
      "id": "43a8dc62-3f07-3d20-856c-c073ae3b698d",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.1.53"
    },
    {
      "id": "49384de8-4951-3432-9418-17e043e4c488",
      "product": {
        "name": "Linux"
      },
      "product_version": "5.7"
    },
    {
      "id": "5b0dcd7b-4e98-330f-9041-90132aee66bb",
      "product": {
        "name": "Linux"
      },
      "product_version": "cf7fbe660f2dbd738ab58aea8e9b0ca6ad232449 <8aa43cfbb68b25119d2ced14ec717173e2901fa2"
    },
    {
      "id": "68e23ba8-dae0-3320-a06d-e712e373a913",
      "product": {
        "name": "Linux"
      },
      "product_version": "cf7fbe660f2dbd738ab58aea8e9b0ca6ad232449 <67312adc96b5a585970d03b62412847afe2c6b01"
    },
    {
      "id": "70dd2b7d-432f-33e5-9a0e-8c478064fb3f",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "73ecf252-cb11-32f1-939d-b45bc273b584",
      "product": {
        "name": "Linux"
      },
      "product_version": "cf7fbe660f2dbd738ab58aea8e9b0ca6ad232449 <7dcbc0bb0e5cc1823923744befce59ac353135e6"
    },
    {
      "id": "b58bfc06-67e1-3245-a4b2-277dc9159fee",
      "product": {
        "name": "Linux"
      },
      "product_version": "cf7fbe660f2dbd738ab58aea8e9b0ca6ad232449 <c0ce0fb76610d5fad31f56f2ca8241a2a6717a1b"
    },
    {
      "id": "c3773c7c-7e25-397e-8bcb-c667cedaf61f",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.5.3"
    },
    {
      "id": "feecd648-11c0-332c-a207-5b1f46a08b86",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.10.195"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "0dd2dc01-d80c-3278-a302-852d4df1299d",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}