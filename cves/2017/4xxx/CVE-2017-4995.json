{
  "id": "EUVD-2022-5362",
  "enisaUuid": "0bb1c35e-9264-3fe1-97d9-f33d8fbb1bf1",
  "description": "An issue was discovered in Pivotal Spring Security 4.2.0.RELEASE through 4.2.2.RELEASE, and Spring Security 5.0.0.M1. When configured to enable default typing, Jackson contained a deserialization vulnerability that could lead to arbitrary code execution. Jackson fixed this vulnerability by blacklisting known \"deserialization gadgets.\" Spring Security configures Jackson with global default typing enabled, which means that (through the previous exploit) arbitrary code could be executed if all of the following is true: (1) Spring Security's Jackson support is being leveraged by invoking SecurityJackson2Modules.getModules(ClassLoader) or SecurityJackson2Modules.enableDefaultTyping(ObjectMapper); (2) Jackson is used to deserialize data that is not trusted (Spring Security does not perform deserialization using Jackson, so this is an explicit choice of the user); and (3) there is an unknown (Jackson is not blacklisting it already) \"deserialization gadget\" that allows code execution present on the classpath. Jackson provides a blacklisting approach to protecting against this type of attack, but Spring Security should be proactive against blocking unknown \"deserialization gadgets\" when Spring Security enables default typing.",
  "datePublished": "Nov 27, 2017, 10:00:00 AM",
  "dateUpdated": "Aug 5, 2024, 2:47:43 PM",
  "baseScore": 8.1,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "references": [
    "https://nvd.nist.gov/vuln/detail/CVE-2017-4995",
    "https://github.com/FasterXML/jackson-databind/issues/1599",
    "https://github.com/spring-projects/spring-security/issues/4370",
    "https://github.com/FasterXML/jackson-databind/commit/60d459cedcf079c6106ae7da2ac562bc32dcabe1",
    "https://github.com/FasterXML/jackson-databind/commit/6ce32ffd18facac6abdbbf559c817b47fcb622c",
    "https://lists.apache.org/thread.html/4641ed8616ccc2c1fbddac2c3dc9900c96387bc226eaf0232d61909b@%3Ccommits.cassandra.apache.org%3E",
    "https://lists.apache.org/thread.html/r42ac3e39e6265db12d9fc6ae1cd4b5fea7aed9830dc6f6d58228fed7@%3Ccommits.cassandra.apache.org%3E",
    "https://lists.apache.org/thread.html/rf7f87810c38dc9abf9f93989f76008f504cbf7c1a355214640b2d04c@%3Ccommits.cassandra.apache.org%3E",
    "https://pivotal.io/security/cve-2017-4995",
    "http://www.securityfocus.com/bid/99080",
    "https://lists.apache.org/thread.html/4641ed8616ccc2c1fbddac2c3dc9900c96387bc226eaf0232d61909b%40%3Ccommits.cassandra.apache.org%3E",
    "https://lists.apache.org/thread.html/rf7f87810c38dc9abf9f93989f76008f504cbf7c1a355214640b2d04c%40%3Ccommits.cassandra.apache.org%3E",
    "https://lists.apache.org/thread.html/r42ac3e39e6265db12d9fc6ae1cd4b5fea7aed9830dc6f6d58228fed7%40%3Ccommits.cassandra.apache.org%3E"
  ],
  "aliases": [
    "CVE-2017-4995",
    "GHSA-vhrg-v3cv-p247"
  ],
  "assigner": "dell",
  "epss": 0.83,
  "enisaIdProduct": [],
  "enisaIdVendor": [
    {
      "id": "6e49c2a5-25c1-3539-95cc-33ae31de434f",
      "vendor": {
        "name": "n/a"
      }
    }
  ],
  "cve": "CVE-2017-4995"
}