{
  "id": "EUVD-2023-0796",
  "enisaUuid": "2d7837f9-59e8-300f-8c2e-06a879e319c0",
  "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
  "datePublished": "Feb 8, 2023, 7:04:04 PM",
  "dateUpdated": "Aug 27, 2025, 8:32:52 PM",
  "baseScore": 7.5,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "references": [
    "https://nvd.nist.gov/vuln/detail/CVE-2022-4450",
    "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=63bcf189be73a9cc1264059bed6f57974be74a83",
    "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=bbcf509bd046b34cca19c766bbddc31683d0858b",
    "https://rustsec.org/advisories/RUSTSEC-2023-0010.html",
    "https://security.gentoo.org/glsa/202402-08",
    "https://www.openssl.org/news/secadv/20230207.txt",
    "https://www.debian.org/security/2023/dsa-5343",
    "https://access.redhat.com/errata/RHSA-2023:0946",
    "https://www.suse.com/security/cve/CVE-2022-4450.html",
    "https://ubuntu.com/security/CVE-2022-4450"
  ],
  "aliases": [
    "CVE-2022-4450",
    "GHSA-v5w6-wcm8-jm4q"
  ],
  "assigner": "openssl",
  "epss": 0.13,
  "enisaIdProduct": [
    {
      "id": "3ef39e3e-0ce8-3bb2-8e11-021bd322080c",
      "product": {
        "name": "OpenSSL"
      },
      "product_version": "3.0.0 <3.0.8"
    },
    {
      "id": "af20b699-6db0-36f6-80fa-81158351f620",
      "product": {
        "name": "OpenSSL"
      },
      "product_version": "1.1.1 <1.1.1t"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "c662b584-541a-3e20-a854-ab37172ba468",
      "vendor": {
        "name": "OpenSSL"
      }
    }
  ]
}