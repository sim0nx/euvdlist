{
  "id": "EUVD-2018-2436",
  "enisaUuid": "28cbf6aa-dfcd-3e5f-aa12-612d667ad2c1",
  "description": "An issue was discovered in phpLiteAdmin 1.9.5 through 1.9.7.1. Due to loose comparison with '==' instead of '===' in classes/Authorization.php for the user-provided login password, it is possible to login with a simpler password if the password has the form of a power in scientific notation (like '2e2' for '200' or '0e1234' for '0'). This is possible because, in the loose comparison case, PHP interprets the string as a number in scientific notation, and thus converts it to a number. After that, the comparison with '==' casts the user input (e.g., the string '200' or '0') to a number, too. Hence the attacker can login with just a '0' or a simple number he has to brute force. Strong comparison with '===' prevents the cast into numbers.",
  "datePublished": "Apr 25, 2018, 5:00:00 AM",
  "dateUpdated": "Aug 5, 2024, 7:39:07 AM",
  "baseScore": 9.8,
  "baseScoreVersion": "3.0",
  "baseScoreVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "references": [
    "http://k3research.outerhaven.de/posts/small-mistakes-lead-to-big-problems.html",
    "https://github.com/phpLiteAdmin/pla/issues/11"
  ],
  "aliases": [
    "CVE-2018-10362",
    "GSD-2018-10362"
  ],
  "assigner": "mitre",
  "epss": 0.32,
  "enisaIdProduct": [
    {
      "id": "18e1ed60-303c-3b0e-a34b-104830f96539",
      "product": {
        "name": "n/a"
      },
      "product_version": "n/a"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "8904cc83-fb40-3160-9746-d821f22a7e9b",
      "vendor": {
        "name": "n/a"
      }
    }
  ]
}