{
  "id": "EUVD-2025-34784",
  "enisaUuid": "60f6ba32-9910-3a33-b2ba-5d7ea6d9a782",
  "description": "In quickjs, in js_print_object, when printing an array, the function first fetches the array length and then loops over it.\u00a0The issue is, printing a value is not side-effect free. An attacker-defined callback could run during js_print_value, during which the array could get resized and len1\u00a0become out of bounds. This results in a use-after-free.A second instance occurs in the same function during printing of a map or set objects. The code iterates over ms->records\u00a0list, but once again, elements could be removed from the list during js_print_value\u00a0call.",
  "datePublished": "Oct 16, 2025, 6:30:24 PM",
  "dateUpdated": "Oct 16, 2025, 6:30:24 PM",
  "baseScore": 8.8,
  "baseScoreVersion": "4.0",
  "baseScoreVector": "CVSS:4.0/AV:A/AC:H/AT:P/PR:N/UI:P/VC:H/VI:H/VA:L/SC:H/SI:H/SA:L",
  "references": [
    "https://bellard.org/quickjs/Changelog",
    "https://issuetracker.google.com/434196651",
    "https://nvd.nist.gov/vuln/detail/CVE-2025-62490"
  ],
  "aliases": [
    "CVE-2025-62490"
  ],
  "assigner": "Google",
  "epss": 0.02,
  "enisaIdProduct": [
    {
      "id": "b31923c5-24dc-3b6f-a902-520c1f9d3416",
      "product": {
        "name": "QuickJS"
      },
      "product_version": "2025-04-26 <2025-09-13"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "368d051f-2a85-3287-bc13-71bc70ec956a",
      "vendor": {
        "name": "QuickJS"
      }
    }
  ]
}