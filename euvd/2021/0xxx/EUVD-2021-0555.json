{
  "id": "EUVD-2021-0555",
  "enisaUuid": "48d795f5-a91b-3fca-86f5-972d9fe721dc",
  "description": "angular-expressions is \"angular's nicest part extracted as a standalone module for the browser and node\". In angular-expressions before version 1.1.2 there is a vulnerability which allows Remote Code Execution if you call \"expressions.compile(userControlledInput)\" where \"userControlledInput\" is text that comes from user input. The security of the package could be bypassed by using a more complex payload, using a \".constructor.constructor\" technique. In terms of impact: If running angular-expressions in the browser, an attacker could run any browser script when the application code calls expressions.compile(userControlledInput). If running angular-expressions on the server, an attacker could run any Javascript expression, thus gaining Remote Code Execution. This is fixed in version 1.1.2 of angular-expressions A temporary workaround might be either to disable user-controlled input that will be fed into angular-expressions in your application or allow only following characters in the userControlledInput.",
  "datePublished": "Feb 1, 2021, 3:05:24 PM",
  "dateUpdated": "Aug 3, 2024, 6:09:15 PM",
  "baseScore": 8.5,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:H/A:N",
  "references": [
    "https://github.com/peerigon/angular-expressions/security/advisories/GHSA-j6px-jwvv-vpwq",
    "https://nvd.nist.gov/vuln/detail/CVE-2021-21277",
    "https://github.com/peerigon/angular-expressions/commit/07edb62902b1f6127b3dcc013da61c6316dd0bf1",
    "https://www.npmjs.com/package/angular-expressions",
    "http://blog.angularjs.org/2016/09/angular-16-expression-sandbox-removal.html"
  ],
  "aliases": [
    "CVE-2021-21277",
    "GHSA-j6px-jwvv-vpwq"
  ],
  "assigner": "GitHub_M",
  "epss": 0.3,
  "enisaIdProduct": [
    {
      "id": "eca7948c-ddb7-37d1-9642-03286810298b",
      "product": {
        "name": "angular-expressions"
      },
      "product_version": "< 1.1.2"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "b271714b-5bd1-3198-b03b-e48d38faf468",
      "vendor": {
        "name": "peerigon"
      }
    }
  ]
}