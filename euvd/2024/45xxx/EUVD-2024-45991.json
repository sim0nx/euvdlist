{
  "id": "EUVD-2024-45991",
  "enisaUuid": "fb7a912e-32fc-3f9b-8e04-4a009a340b1f",
  "description": "authentik is an open-source identity provider. Redirect URIs in the OAuth2 provider in authentik are checked by RegEx comparison.\nWhen no Redirect URIs are configured in a provider, authentik will automatically use the first redirect_uri value received as an allowed redirect URI, without escaping characters that have a special meaning in RegEx. Similarly, the documentation did not take this into consideration either. Given a provider with the Redirect URIs set to https://foo.example.com, an attacker can register a domain fooaexample.com, and it will correctly pass validation. authentik 2024.8.5 and 2024.10.3 fix this issue. As a workaround, When configuring OAuth2 providers, make sure to escape any wildcard characters that are not intended to function as a wildcard, for example replace `.` with `\\.`.",
  "datePublished": "Nov 21, 2024, 5:18:41 PM",
  "dateUpdated": "Sep 23, 2025, 6:21:58 PM",
  "baseScore": 7.9,
  "baseScoreVersion": "4.0",
  "baseScoreVector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:N/SC:H/SI:H/SA:H",
  "references": [
    "https://github.com/goauthentik/authentik/security/advisories/GHSA-3q5w-6m3x-64gj",
    "https://github.com/goauthentik/authentik/commit/85bb638243c8d7ea42ddd3b15b3f51a90d2b8c54"
  ],
  "aliases": [
    "CVE-2024-52289"
  ],
  "assigner": "GitHub_M",
  "epss": 0.62,
  "enisaIdProduct": [
    {
      "id": "5362ccdb-5792-3028-a2b8-2b1a3a760845",
      "product": {
        "name": "authentik"
      },
      "product_version": "< 2024.8.5"
    },
    {
      "id": "586d986b-a033-3e8f-a9b2-36e342b9811f",
      "product": {
        "name": "authentik"
      },
      "product_version": "2024.10.0-rc1, < 2024.10.3"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "74917c49-c3b7-3fb7-ac2f-0660a3bb0e7c",
      "vendor": {
        "name": "goauthentik"
      }
    }
  ]
}