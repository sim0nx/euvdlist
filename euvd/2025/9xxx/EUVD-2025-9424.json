{
  "id": "EUVD-2025-9424",
  "enisaUuid": "ba524c46-7bab-3cd3-8e80-ece236e36a3f",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched_ext: Fix pick_task_scx() picking non-queued tasks when it's called without balance()\n\na6250aa251ea (\"sched_ext: Handle cases where pick_task_scx() is called\nwithout preceding balance_scx()\") added a workaround to handle the cases\nwhere pick_task_scx() is called without prececing balance_scx() which is due\nto a fair class bug where pick_taks_fair() may return NULL after a true\nreturn from balance_fair().\n\nThe workaround detects when pick_task_scx() is called without preceding\nbalance_scx() and emulates SCX_RQ_BAL_KEEP and triggers kicking to avoid\nstalling. Unfortunately, the workaround code was testing whether @prev was\non SCX to decide whether to keep the task running. This is incorrect as the\ntask may be on SCX but no longer runnable.\n\nThis could lead to a non-runnable task to be returned from pick_task_scx()\nwhich cause interesting confusions and failures. e.g. A common failure mode\nis the task ending up with (!on_rq && on_cpu) state which can cause\npotential wakers to busy loop, which can easily lead to deadlocks.\n\nFix it by testing whether @prev has SCX_TASK_QUEUED set. This makes\n@prev_on_scx only used in one place. Open code the usage and improve the\ncomment while at it.",
  "datePublished": "Apr 1, 2025, 3:26:49 PM",
  "dateUpdated": "Apr 1, 2025, 3:26:49 PM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/5324c459f90d16b0c43a78b494c598915d782b7a",
    "https://git.kernel.org/stable/c/de60a31cb0bcacfaf9487546eac5e70e0a9c66d7",
    "https://git.kernel.org/stable/c/8fef0a3b17bb258130a4fcbcb5addf94b25e9ec5"
  ],
  "aliases": [
    "CVE-2025-21897"
  ],
  "assigner": "Linux",
  "epss": 0.02,
  "enisaIdProduct": [
    {
      "id": "12630b22-fe5c-3ad3-bb1d-f6538a232f35",
      "product": {
        "name": "Linux"
      },
      "product_version": "a6250aa251eacaf3ebfcfe152a96a727fd483ecd <de60a31cb0bcacfaf9487546eac5e70e0a9c66d7"
    },
    {
      "id": "1d4493f1-62da-392c-ad6d-764dccd636f8",
      "product": {
        "name": "Linux"
      },
      "product_version": "a6250aa251eacaf3ebfcfe152a96a727fd483ecd <5324c459f90d16b0c43a78b494c598915d782b7a"
    },
    {
      "id": "30768a73-65b6-3dfb-86a6-043cf776d641",
      "product": {
        "name": "Linux"
      },
      "product_version": "6.12"
    },
    {
      "id": "bb5babde-8f90-3764-86f1-db7897657efb",
      "product": {
        "name": "Linux"
      },
      "product_version": ""
    },
    {
      "id": "e0b67b39-fd09-3925-a157-b446b6a04c84",
      "product": {
        "name": "Linux"
      },
      "product_version": "a6250aa251eacaf3ebfcfe152a96a727fd483ecd <8fef0a3b17bb258130a4fcbcb5addf94b25e9ec5"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "bb5babde-8f90-3764-86f1-db7897657efb",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}