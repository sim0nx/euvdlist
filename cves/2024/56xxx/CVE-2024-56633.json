{
  "id": "EUVD-2024-53281",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp_bpf: Fix the sk_mem_uncharge logic in tcp_bpf_sendmsg\n\nThe current sk memory accounting logic in __SK_REDIRECT is pre-uncharging\ntosend bytes, which is either msg->sg.size or a smaller value apply_bytes.\n\nPotential problems with this strategy are as follows:\n\n- If the actual sent bytes are smaller than tosend, we need to charge some\n  bytes back, as in line 487, which is okay but seems not clean.\n\n- When tosend is set to apply_bytes, as in line 417, and (ret < 0), we may\n  miss uncharging (msg->sg.size - apply_bytes) bytes.\n\n[...]\n415 tosend = msg->sg.size;\n416 if (psock->apply_bytes && psock->apply_bytes < tosend)\n417   tosend = psock->apply_bytes;\n[...]\n443 sk_msg_return(sk, msg, tosend);\n444 release_sock(sk);\n446 origsize = msg->sg.size;\n447 ret = tcp_bpf_sendmsg_redir(sk_redir, redir_ingress,\n448                             msg, tosend, flags);\n449 sent = origsize - msg->sg.size;\n[...]\n454 lock_sock(sk);\n455 if (unlikely(ret < 0)) {\n456   int free = sk_msg_free_nocharge(sk, msg);\n458   if (!cork)\n459     *copied -= free;\n460 }\n[...]\n487 if (eval == __SK_REDIRECT)\n488   sk_mem_charge(sk, tosend - sent);\n[...]\n\nWhen running the selftest test_txmsg_redir_wait_sndmem with txmsg_apply,\nthe following warning will be reported:\n\n------------[ cut here ]------------\nWARNING: CPU: 6 PID: 57 at net/ipv4/af_inet.c:156 inet_sock_destruct+0x190/0x1a0\nModules linked in:\nCPU: 6 UID: 0 PID: 57 Comm: kworker/6:0 Not tainted 6.12.0-rc1.bm.1-amd64+ #43\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014\nWorkqueue: events sk_psock_destroy\nRIP: 0010:inet_sock_destruct+0x190/0x1a0\nRSP: 0018:ffffad0a8021fe08 EFLAGS: 00010206\nRAX: 0000000000000011 RBX: ffff9aab4475b900 RCX: ffff9aab481a0800\nRDX: 0000000000000303 RSI: 0000000000000011 RDI: ffff9aab4475b900\nRBP: ffff9aab4475b990 R08: 0000000000000000 R09: ffff9aab40050ec0\nR10: 0000000000000000 R11: ffff9aae6fdb1d01 R12: ffff9aab49c60400\nR13: ffff9aab49c60598 R14: ffff9aab49c60598 R15: dead000000000100\nFS:  0000000000000000(0000) GS:ffff9aae6fd80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007ffec7e47bd8 CR3: 00000001a1a1c004 CR4: 0000000000770ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n<TASK>\n? __warn+0x89/0x130\n? inet_sock_destruct+0x190/0x1a0\n? report_bug+0xfc/0x1e0\n? handle_bug+0x5c/0xa0\n? exc_invalid_op+0x17/0x70\n? asm_exc_invalid_op+0x1a/0x20\n? inet_sock_destruct+0x190/0x1a0\n__sk_destruct+0x25/0x220\nsk_psock_destroy+0x2b2/0x310\nprocess_scheduled_works+0xa3/0x3e0\nworker_thread+0x117/0x240\n? __pfx_worker_thread+0x10/0x10\nkthread+0xcf/0x100\n? __pfx_kthread+0x10/0x10\nret_from_fork+0x31/0x40\n? __pfx_kthread+0x10/0x10\nret_from_fork_asm+0x1a/0x30\n</TASK>\n---[ end trace 0000000000000000 ]---\n\nIn __SK_REDIRECT, a more concise way is delaying the uncharging after sent\nbytes are finalized, and uncharge this value. When (ret < 0), we shall\ninvoke sk_msg_free.\n\nSame thing happens in case __SK_DROP, when tosend is set to apply_bytes,\nwe may miss uncharging (msg->sg.size - apply_bytes) bytes. The same\nwarning will be reported in selftest.\n\n[...]\n468 case __SK_DROP:\n469 default:\n470 sk_msg_free_partial(sk, msg, tosend);\n471 sk_msg_apply_bytes(psock, tosend);\n472 *copied -= (tosend + delta);\n473 return -EACCES;\n[...]\n\nSo instead of sk_msg_free_partial we can do sk_msg_free here.",
  "datePublished": "Dec 27, 2024, 3:02:31 PM",
  "dateUpdated": "Jan 20, 2025, 6:24:33 AM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/905d82e6e77d16ec3e089c92b7b59a14899dfc1a",
    "https://git.kernel.org/stable/c/dbedc7e142df5ea238a46fdd7462c1c42cd36a10",
    "https://git.kernel.org/stable/c/0d6cd1151e26fc7c2d5daa85e8984aaa685a1a12",
    "https://git.kernel.org/stable/c/456f08d24afa51b5eb816c42e4ca1c44a247bd42",
    "https://git.kernel.org/stable/c/206d56f41a1509cadd06e2178c26cb830e45057d",
    "https://git.kernel.org/stable/c/5c9e3bb43a354a2245caebbbbb4a5b8c034fdd56",
    "https://git.kernel.org/stable/c/ca70b8baf2bd125b2a4d96e76db79375c07d7ff2"
  ],
  "aliases": [
    "CVE-2024-56633"
  ],
  "assigner": "Linux",
  "epss": 0.07,
  "enisaIdProduct": [
    {
      "id": "005f3707-3e5a-3426-8dfe-2a282ca2ea41",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.10.231"
    },
    {
      "id": "05d45dcd-ef59-3c8e-b59d-7ac3697f269a",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.6.66"
    },
    {
      "id": "0ae2f074-3549-3d66-b70f-41dfbfe8fe81",
      "product": {
        "name": "Linux"
      },
      "product_version": "604326b41a6fb9b4a78b6179335decee0365cd8c <206d56f41a1509cadd06e2178c26cb830e45057d"
    },
    {
      "id": "1f7152d0-1fa8-39ef-8d0a-d57d291af330",
      "product": {
        "name": "Linux"
      },
      "product_version": "604326b41a6fb9b4a78b6179335decee0365cd8c <ca70b8baf2bd125b2a4d96e76db79375c07d7ff2"
    },
    {
      "id": "21a3587d-4620-3554-81e9-9c4d8c897f5c",
      "product": {
        "name": "Linux"
      },
      "product_version": "4.20"
    },
    {
      "id": "2e393b67-2c8d-369d-a035-4928fec4167f",
      "product": {
        "name": "Linux"
      },
      "product_version": "604326b41a6fb9b4a78b6179335decee0365cd8c <dbedc7e142df5ea238a46fdd7462c1c42cd36a10"
    },
    {
      "id": "4318d323-e0c5-35e6-b2a4-afa8a32b703a",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "4439eede-9226-3fa8-babd-73d0e9c0127b",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.15.174"
    },
    {
      "id": "4a5fd81b-e2d3-362b-8d07-1c50f486e5ae",
      "product": {
        "name": "Linux"
      },
      "product_version": "604326b41a6fb9b4a78b6179335decee0365cd8c <905d82e6e77d16ec3e089c92b7b59a14899dfc1a"
    },
    {
      "id": "4d395a65-c922-352b-9e0b-5e2b7abda096",
      "product": {
        "name": "Linux"
      },
      "product_version": "604326b41a6fb9b4a78b6179335decee0365cd8c <0d6cd1151e26fc7c2d5daa85e8984aaa685a1a12"
    },
    {
      "id": "5a46e706-f511-3b62-b53a-f66eb961e11d",
      "product": {
        "name": "Linux"
      },
      "product_version": "604326b41a6fb9b4a78b6179335decee0365cd8c <5c9e3bb43a354a2245caebbbbb4a5b8c034fdd56"
    },
    {
      "id": "6b9f9a78-9e08-3cb8-864a-70a049ae5082",
      "product": {
        "name": "Linux"
      },
      "product_version": "604326b41a6fb9b4a78b6179335decee0365cd8c <456f08d24afa51b5eb816c42e4ca1c44a247bd42"
    },
    {
      "id": "7e246379-8cd1-3bbe-bce0-109ab639bf52",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.4.287"
    },
    {
      "id": "7ff79756-c532-356a-bc22-1a4a8c332c28",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.13"
    },
    {
      "id": "a68fa180-00f1-35b8-900e-d4bf8a5bbce7",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.1.120"
    },
    {
      "id": "d136f5aa-d68b-3f0d-bdb4-6294b3530a2c",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.12.5"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "ea570d81-285c-3e9c-a338-28c92fa42fc6",
      "vendor": {
        "name": "Linux"
      }
    }
  ],
  "cve": "CVE-2024-56633"
}
