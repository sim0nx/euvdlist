{
  "id": "EUVD-2021-3561",
  "description": "The path in this case is a little bit convoluted. The end result is that via an ioctl an untrusted app can control the ui32PageIndex offset in the expression:sPA.uiAddr = page_to_phys(psOSPageArrayData->pagearray[ui32PageIndex]);With the current PoC this crashes as an OOB read. However, given that the OOB read value is ending up as the address field of a struct I think i seems plausible that this could lead to an OOB write if the attacker is able to cause the OOB read to pull an interesting kernel address. Regardless if this is a read or write, it is a High severity issue in the kernel.Product: AndroidVersions: Android SoCAndroid ID: A-238904312",
  "datePublished": "Sep 13, 2022, 7:13:39 PM",
  "dateUpdated": "Aug 3, 2024, 3:55:17 PM",
  "baseScore": 9.8,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "references": [
    "https://source.android.com/security/bulletin/2022-09-01"
  ],
  "aliases": [
    "CVE-2021-0942",
    "GSD-2021-0942"
  ],
  "assigner": "google_android",
  "epss": 0.08,
  "enisaIdProduct": [],
  "enisaIdVendor": [
    {
      "id": "c2cc67a4-c17a-34b6-9127-7c36efb9491f",
      "vendor": {
        "name": "n/a"
      }
    }
  ],
  "cve": "CVE-2021-0942"
}