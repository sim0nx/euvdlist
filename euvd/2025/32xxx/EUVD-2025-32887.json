{
  "id": "EUVD-2025-32887",
  "enisaUuid": "f0fab75a-f285-3385-ace9-f58a5e32be30",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phylink: add lock for serializing concurrent pl->phydev writes with resolver\n\nCurrently phylink_resolve() protects itself against concurrent\nphylink_bringup_phy() or phylink_disconnect_phy() calls which modify\npl->phydev by relying on pl->state_mutex.\n\nThe problem is that in phylink_resolve(), pl->state_mutex is in a lock\ninversion state with pl->phydev->lock. So pl->phydev->lock needs to be\nacquired prior to pl->state_mutex. But that requires dereferencing\npl->phydev in the first place, and without pl->state_mutex, that is\nracy.\n\nHence the reason for the extra lock. Currently it is redundant, but it\nwill serve a functional purpose once mutex_lock(&phy->lock) will be\nmoved outside of the mutex_lock(&pl->state_mutex) section.\n\nAnother alternative considered would have been to let phylink_resolve()\nacquire the rtnl_mutex, which is also held when phylink_bringup_phy()\nand phylink_disconnect_phy() are called. But since phylink_disconnect_phy()\nruns under rtnl_lock(), it would deadlock with phylink_resolve() when\ncalling flush_work(&pl->resolve). Additionally, it would have been\nundesirable because it would have unnecessarily blocked many other call\npaths as well in the entire kernel, so the smaller-scoped lock was\npreferred.",
  "datePublished": "Oct 1, 2025, 7:44:28 AM",
  "dateUpdated": "Oct 1, 2025, 7:44:28 AM",
  "baseScore": 0.0,
  "references": [
    "https://nvd.nist.gov/vuln/detail/CVE-2025-39905",
    "https://git.kernel.org/stable/c/0ba5b2f2c381dbec9ed9e4ab3ae5d3e667de0dc3",
    "https://git.kernel.org/stable/c/56fe63b05ec84ae6674269d78397cec43a7a295a"
  ],
  "aliases": [
    "CVE-2025-39905",
    "GHSA-3w4m-c8rq-62jj"
  ],
  "assigner": "Linux",
  "epss": 0.02,
  "enisaIdProduct": [
    {
      "id": "0b6d0180-986a-3b9c-8844-3b771f6f37ed",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <0ba5b2f2c381dbec9ed9e4ab3ae5d3e667de0dc3"
    },
    {
      "id": "1026b0e7-ebb9-3814-913b-6006a0a7fb2e",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <56fe63b05ec84ae6674269d78397cec43a7a295a"
    },
    {
      "id": "33e26b47-3746-3a5c-ac66-a6a063f0e2be",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.16.8"
    },
    {
      "id": "f6c0abe1-8371-331c-8ac2-e6f1a1e11ff6",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.17"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "8dc7942c-f1ce-30aa-aa47-4da462cf24cc",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}