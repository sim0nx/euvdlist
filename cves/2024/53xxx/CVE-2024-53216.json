{
  "id": "EUVD-2024-51888",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: release svc_expkey/svc_export with rcu_work\n\nThe last reference for `cache_head` can be reduced to zero in `c_show`\nand `e_show`(using `rcu_read_lock` and `rcu_read_unlock`). Consequently,\n`svc_export_put` and `expkey_put` will be invoked, leading to two\nissues:\n\n1. The `svc_export_put` will directly free ex_uuid. However,\n   `e_show`/`c_show` will access `ex_uuid` after `cache_put`, which can\n   trigger a use-after-free issue, shown below.\n\n   ==================================================================\n   BUG: KASAN: slab-use-after-free in svc_export_show+0x362/0x430 [nfsd]\n   Read of size 1 at addr ff11000010fdc120 by task cat/870\n\n   CPU: 1 UID: 0 PID: 870 Comm: cat Not tainted 6.12.0-rc3+ #1\n   Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\n   1.16.1-2.fc37 04/01/2014\n   Call Trace:\n    <TASK>\n    dump_stack_lvl+0x53/0x70\n    print_address_description.constprop.0+0x2c/0x3a0\n    print_report+0xb9/0x280\n    kasan_report+0xae/0xe0\n    svc_export_show+0x362/0x430 [nfsd]\n    c_show+0x161/0x390 [sunrpc]\n    seq_read_iter+0x589/0x770\n    seq_read+0x1e5/0x270\n    proc_reg_read+0xe1/0x140\n    vfs_read+0x125/0x530\n    ksys_read+0xc1/0x160\n    do_syscall_64+0x5f/0x170\n    entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n   Allocated by task 830:\n    kasan_save_stack+0x20/0x40\n    kasan_save_track+0x14/0x30\n    __kasan_kmalloc+0x8f/0xa0\n    __kmalloc_node_track_caller_noprof+0x1bc/0x400\n    kmemdup_noprof+0x22/0x50\n    svc_export_parse+0x8a9/0xb80 [nfsd]\n    cache_do_downcall+0x71/0xa0 [sunrpc]\n    cache_write_procfs+0x8e/0xd0 [sunrpc]\n    proc_reg_write+0xe1/0x140\n    vfs_write+0x1a5/0x6d0\n    ksys_write+0xc1/0x160\n    do_syscall_64+0x5f/0x170\n    entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n   Freed by task 868:\n    kasan_save_stack+0x20/0x40\n    kasan_save_track+0x14/0x30\n    kasan_save_free_info+0x3b/0x60\n    __kasan_slab_free+0x37/0x50\n    kfree+0xf3/0x3e0\n    svc_export_put+0x87/0xb0 [nfsd]\n    cache_purge+0x17f/0x1f0 [sunrpc]\n    nfsd_destroy_serv+0x226/0x2d0 [nfsd]\n    nfsd_svc+0x125/0x1e0 [nfsd]\n    write_threads+0x16a/0x2a0 [nfsd]\n    nfsctl_transaction_write+0x74/0xa0 [nfsd]\n    vfs_write+0x1a5/0x6d0\n    ksys_write+0xc1/0x160\n    do_syscall_64+0x5f/0x170\n    entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n2. We cannot sleep while using `rcu_read_lock`/`rcu_read_unlock`.\n   However, `svc_export_put`/`expkey_put` will call path_put, which\n   subsequently triggers a sleeping operation due to the following\n   `dput`.\n\n   =============================\n   WARNING: suspicious RCU usage\n   5.10.0-dirty #141 Not tainted\n   -----------------------------\n   ...\n   Call Trace:\n   dump_stack+0x9a/0xd0\n   ___might_sleep+0x231/0x240\n   dput+0x39/0x600\n   path_put+0x1b/0x30\n   svc_export_put+0x17/0x80\n   e_show+0x1c9/0x200\n   seq_read_iter+0x63f/0x7c0\n   seq_read+0x226/0x2d0\n   vfs_read+0x113/0x2c0\n   ksys_read+0xc9/0x170\n   do_syscall_64+0x33/0x40\n   entry_SYSCALL_64_after_hwframe+0x67/0xd1\n\nFix these issues by using `rcu_work` to help release\n`svc_expkey`/`svc_export`. This approach allows for an asynchronous\ncontext to invoke `path_put` and also facilitates the freeing of\n`uuid/exp/key` after an RCU grace period.",
  "datePublished": "Dec 27, 2024, 1:50:01 PM",
  "dateUpdated": "Feb 11, 2025, 3:45:26 PM",
  "baseScore": 7.8,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
  "references": [
    "https://git.kernel.org/stable/c/bd8524148dd8c123334b066faa90590ba2ef8e6f",
    "https://git.kernel.org/stable/c/2e4854599200f4d021df8ae17e69221d7c149f3e",
    "https://git.kernel.org/stable/c/ad4363a24a5746b257c0beb5d8cc68f9b62c173f",
    "https://git.kernel.org/stable/c/f8c989a0c89a75d30f899a7cabdc14d72522bb8d",
    "https://nvd.nist.gov/vuln/detail/CVE-2024-53216"
  ],
  "aliases": [
    "CVE-2024-53216"
  ],
  "assigner": "Linux",
  "epss": 0.03,
  "enisaIdProduct": [
    {
      "id": "0520e807-055f-3751-b1d3-7de9c857ed21",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.12.2"
    },
    {
      "id": "11c363f0-d39b-3adf-a0dc-02ea5677d848",
      "product": {
        "name": "Linux"
      },
      "product_version": "9ceddd9da13434a5906255c0fc528c385aded283 <ad4363a24a5746b257c0beb5d8cc68f9b62c173f"
    },
    {
      "id": "144c5f34-5bbd-3dd1-8160-20c79394a390",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "398ed760-26ac-3be3-af22-aa14f0545674",
      "product": {
        "name": "Linux"
      },
      "product_version": "9ceddd9da13434a5906255c0fc528c385aded283 <f8c989a0c89a75d30f899a7cabdc14d72522bb8d"
    },
    {
      "id": "53f763ea-1953-38a1-b6f2-39dc112d8e0b",
      "product": {
        "name": "Linux"
      },
      "product_version": "4.20"
    },
    {
      "id": "8e9f849f-aa59-3994-a1f7-416b473c8eb5",
      "product": {
        "name": "Linux"
      },
      "product_version": "9ceddd9da13434a5906255c0fc528c385aded283 <2e4854599200f4d021df8ae17e69221d7c149f3e"
    },
    {
      "id": "b48097a0-1b4a-38f1-b729-a6b0cce4720f",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.13"
    },
    {
      "id": "d3038733-fabd-3d3d-a73d-10f6a766bc47",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.11.11"
    },
    {
      "id": "d7026462-8806-3eab-ab31-be88e73c9449",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.6.64"
    },
    {
      "id": "df97fb53-9e84-3a24-8149-d73158e4d574",
      "product": {
        "name": "Linux"
      },
      "product_version": "9ceddd9da13434a5906255c0fc528c385aded283 <bd8524148dd8c123334b066faa90590ba2ef8e6f"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "6d9b4f70-dbd7-352b-86a4-6fdb141b29f1",
      "vendor": {
        "name": "Linux"
      }
    }
  ],
  "cve": "CVE-2024-53216"
}
