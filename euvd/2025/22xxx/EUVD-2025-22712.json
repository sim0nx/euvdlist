{
  "id": "EUVD-2025-22712",
  "enisaUuid": "984c8a1b-8cfa-35e8-bb60-2b53363fc000",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"riscv: Define TASK_SIZE_MAX for __access_ok()\"\n\nThis reverts commit ad5643cf2f69 (\"riscv: Define TASK_SIZE_MAX for\n__access_ok()\").\n\nThis commit changes TASK_SIZE_MAX to be LONG_MAX to optimize access_ok(),\nbecause the previous TASK_SIZE_MAX (default to TASK_SIZE) requires some\ncomputation.\n\nThe reasoning was that all user addresses are less than LONG_MAX, and all\nkernel addresses are greater than LONG_MAX. Therefore access_ok() can\nfilter kernel addresses.\n\nAddresses between TASK_SIZE and LONG_MAX are not valid user addresses, but\naccess_ok() let them pass. That was thought to be okay, because they are\nnot valid addresses at hardware level.\n\nUnfortunately, one case is missed: get_user_pages_fast() happily accepts\naddresses between TASK_SIZE and LONG_MAX. futex(), for instance, uses\nget_user_pages_fast(). This causes the problem reported by Robert [1].\n\nTherefore, revert this commit. TASK_SIZE_MAX is changed to the default:\nTASK_SIZE.\n\nThis unfortunately reduces performance, because TASK_SIZE is more expensive\nto compute compared to LONG_MAX. But correctness first, we can think about\noptimization later, if required.",
  "datePublished": "Jul 25, 2025, 2:32:08 PM",
  "dateUpdated": "Jul 28, 2025, 4:22:07 AM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/fe30c30bf3bb68d4a4d8c7c814769857b5c973e6",
    "https://git.kernel.org/stable/c/f8b1898748dfeb4f9b67b6a6d661f354b9de3523",
    "https://git.kernel.org/stable/c/890ba5be6335dbbbc99af14ea007befb5f83f174"
  ],
  "aliases": [
    "CVE-2025-38434"
  ],
  "assigner": "Linux",
  "epss": 0.02,
  "enisaIdProduct": [
    {
      "id": "31174a90-7a15-3740-b41a-47bb6a9be9d0",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.15.5"
    },
    {
      "id": "424590eb-f830-3345-a147-537775c60c4a",
      "product": {
        "name": "Linux"
      },
      "product_version": "6.10"
    },
    {
      "id": "449ca2c3-feaa-38d4-a209-255b54188a7e",
      "product": {
        "name": "Linux"
      },
      "product_version": "ad5643cf2f699989daa85d909403febd6712fccb <f8b1898748dfeb4f9b67b6a6d661f354b9de3523"
    },
    {
      "id": "543b7e4d-6794-33ee-af58-8e1ef4dabc7a",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.12.36"
    },
    {
      "id": "5a15f82c-b9b2-3eea-b631-53b6cdcf02ac",
      "product": {
        "name": "Linux"
      },
      "product_version": "ad5643cf2f699989daa85d909403febd6712fccb <890ba5be6335dbbbc99af14ea007befb5f83f174"
    },
    {
      "id": "677922a1-9fd8-3784-91a1-75fde46ea565",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.16-rc4"
    },
    {
      "id": "75451a9d-8dc4-3c1b-9aa9-e063fe66669b",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.16"
    },
    {
      "id": "a82bd774-a93a-345f-b897-9c1d9fc131dc",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "f6e778e0-36ae-3548-84c7-ff4b090df62f",
      "product": {
        "name": "Linux"
      },
      "product_version": "ad5643cf2f699989daa85d909403febd6712fccb <fe30c30bf3bb68d4a4d8c7c814769857b5c973e6"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "ffd12b56-7fd1-389a-85c9-de3f051c606c",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}