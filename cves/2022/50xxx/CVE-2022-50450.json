{
  "id": "EUVD-2025-31995",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nlibbpf: Use elf_getshdrnum() instead of e_shnum\n\nThis commit replace e_shnum with the elf_getshdrnum() helper to fix two\noss-fuzz-reported heap-buffer overflow in __bpf_object__open. Both\nreports are incorrectly marked as fixed and while still being\nreproducible in the latest libbpf.\n\n  # clusterfuzz-testcase-minimized-bpf-object-fuzzer-5747922482888704\n  libbpf: loading object 'fuzz-object' from buffer\n  libbpf: sec_cnt is 0\n  libbpf: elf: section(1) .data, size 0, link 538976288, flags 2020202020202020, type=2\n  libbpf: elf: section(2) .data, size 32, link 538976288, flags 202020202020ff20, type=1\n  =================================================================\n  ==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000000c0 at pc 0x0000005a7b46 bp 0x7ffd12214af0 sp 0x7ffd12214ae8\n  WRITE of size 4 at 0x6020000000c0 thread T0\n  SCARINESS: 46 (4-byte-write-heap-buffer-overflow-far-from-bounds)\n      #0 0x5a7b45 in bpf_object__elf_collect /src/libbpf/src/libbpf.c:3414:24\n      #1 0x5733c0 in bpf_object_open /src/libbpf/src/libbpf.c:7223:16\n      #2 0x5739fd in bpf_object__open_mem /src/libbpf/src/libbpf.c:7263:20\n      ...\n\nThe issue lie in libbpf's direct use of e_shnum field in ELF header as\nthe section header count. Where as libelf implemented an extra logic\nthat, when e_shnum == 0 && e_shoff != 0, will use sh_size member of the\ninitial section header as the real section header count (part of ELF\nspec to accommodate situation where section header counter is larger\nthan SHN_LORESERVE).\n\nThe above inconsistency lead to libbpf writing into a zero-entry calloc\narea. So intead of using e_shnum directly, use the elf_getshdrnum()\nhelper provided by libelf to retrieve the section header counter into\nsec_cnt.",
  "datePublished": "Oct 1, 2025, 11:45:23 AM",
  "dateUpdated": "Oct 1, 2025, 11:45:23 AM",
  "baseScore": 0.0,
  "references": [
    "https://nvd.nist.gov/vuln/detail/CVE-2022-50450",
    "https://git.kernel.org/stable/c/51deedc9b8680953437dfe359e5268120de10e30",
    "https://git.kernel.org/stable/c/622ff59742fe7bf53c06a57332040fa0e08b8242",
    "https://git.kernel.org/stable/c/854f8c61422053f71e3cf0c4abf757c8aa5c748d"
  ],
  "aliases": [
    "CVE-2022-50450",
    "GHSA-34vw-87pm-jfg6"
  ],
  "assigner": "Linux",
  "epss": 0.02,
  "enisaIdProduct": [
    {
      "id": "00e3ed76-c9bb-3685-8266-4307c1847dd2",
      "product": {
        "name": "Linux"
      },
      "product_version": "25bbbd7a444b1624000389830d46ffdc5b809ee8 <854f8c61422053f71e3cf0c4abf757c8aa5c748d"
    },
    {
      "id": "17426e7d-3a15-3798-aece-25a4e5c10c29",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.1.2"
    },
    {
      "id": "17c6abd6-25e1-318a-873f-44aceceec80d",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.2"
    },
    {
      "id": "428a91f3-e4ff-3981-9523-326a92c050de",
      "product": {
        "name": "Linux"
      },
      "product_version": "25bbbd7a444b1624000389830d46ffdc5b809ee8 <622ff59742fe7bf53c06a57332040fa0e08b8242"
    },
    {
      "id": "684eb23b-e17d-3fcc-91a0-fca40bd3fbf8",
      "product": {
        "name": "Linux"
      },
      "product_version": "5.16"
    },
    {
      "id": "729f49d2-d8fa-371b-99ac-2f5a953fb107",
      "product": {
        "name": "Linux"
      },
      "product_version": "25bbbd7a444b1624000389830d46ffdc5b809ee8 <51deedc9b8680953437dfe359e5268120de10e30"
    },
    {
      "id": "9664891b-95b2-39d0-af94-d27a85a8fc53",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.0.16"
    },
    {
      "id": "b4069860-d32d-348a-a3ed-7345f2d56c11",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "e72255a6-073e-3bc1-a098-db6b0878434d",
      "vendor": {
        "name": "Linux"
      }
    }
  ],
  "cve": "CVE-2022-50450"
}