{
  "id": "EUVD-2025-9382",
  "enisaUuid": "b7b99d23-bf08-3f5e-9987-f98f0935c1ae",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe/hmm: Don't dereference struct page pointers without notifier lock\n\nThe pnfs that we obtain from hmm_range_fault() point to pages that\nwe don't have a reference on, and the guarantee that they are still\nin the cpu page-tables is that the notifier lock must be held and the\nnotifier seqno is still valid.\n\nSo while building the sg table and marking the pages accesses / dirty\nwe need to hold this lock with a validated seqno.\n\nHowever, the lock is reclaim tainted which makes\nsg_alloc_table_from_pages_segment() unusable, since it internally\nallocates memory.\n\nInstead build the sg-table manually. For the non-iommu case\nthis might lead to fewer coalesces, but if that's a problem it can\nbe fixed up later in the resource cursor code. For the iommu case,\nthe whole sg-table may still be coalesced to a single contigous\ndevice va region.\n\nThis avoids marking pages that we don't own dirty and accessed, and\nit also avoid dereferencing struct pages that we don't own.\n\nv2:\n- Use assert to check whether hmm pfns are valid (Matthew Auld)\n- Take into account that large pages may cross range boundaries\n  (Matthew Auld)\n\nv3:\n- Don't unnecessarily check for a non-freed sg-table. (Matthew Auld)\n- Add a missing up_read() in an error path. (Matthew Auld)\n\n(cherry picked from commit ea3e66d280ce2576664a862693d1da8fd324c317)",
  "datePublished": "Apr 1, 2025, 3:41:05 PM",
  "dateUpdated": "Apr 1, 2025, 3:41:05 PM",
  "baseScore": 0.0,
  "references": [
    "https://git.kernel.org/stable/c/2a24c98f0e4cc994334598d4f3a851972064809d",
    "https://git.kernel.org/stable/c/f9326f529da7298a95643c3267f1c0fdb0db55eb",
    "https://git.kernel.org/stable/c/0a98219bcc961edd3388960576e4353e123b4a51"
  ],
  "aliases": [
    "CVE-2025-21939"
  ],
  "assigner": "Linux",
  "epss": 0.02,
  "enisaIdProduct": [
    {
      "id": "1fb9f441-3bbf-3938-8932-5bf459c4dac2",
      "product": {
        "name": "Linux"
      },
      "product_version": ""
    },
    {
      "id": "47abd43d-2079-39e6-8872-8ad30219419a",
      "product": {
        "name": "Linux"
      },
      "product_version": "81e058a3e7fd8593d076b4f26f7b8bb49f1d61e3 <2a24c98f0e4cc994334598d4f3a851972064809d"
    },
    {
      "id": "48a43e3a-8f58-339f-8b68-52af954dd727",
      "product": {
        "name": "Linux"
      },
      "product_version": "6.10"
    },
    {
      "id": "5dba149e-e8bb-386e-8dfa-60480b27ff87",
      "product": {
        "name": "Linux"
      },
      "product_version": "81e058a3e7fd8593d076b4f26f7b8bb49f1d61e3 <f9326f529da7298a95643c3267f1c0fdb0db55eb"
    },
    {
      "id": "5e6f1ed6-2303-3e09-9d20-38cbd3612414",
      "product": {
        "name": "Linux"
      },
      "product_version": "81e058a3e7fd8593d076b4f26f7b8bb49f1d61e3 <0a98219bcc961edd3388960576e4353e123b4a51"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "1fb9f441-3bbf-3938-8932-5bf459c4dac2",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}