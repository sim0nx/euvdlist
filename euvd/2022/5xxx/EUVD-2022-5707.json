{
  "id": "EUVD-2022-5707",
  "enisaUuid": "41883e41-03c7-3dca-a8f3-9561ba1144fa",
  "description": "PhantomJS through 2.1.1 has an arbitrary file read vulnerability, as demonstrated by an XMLHttpRequest for a file:// URI. The vulnerability exists in the page.open() function of the webpage module, which loads a specified URL and calls a given callback. An attacker can supply a specially crafted HTML file, as user input, that allows reading arbitrary files on the filesystem. For example, if page.render() is the function callback, this generates a PDF or an image of the targeted file. NOTE: this product is no longer developed.",
  "datePublished": "Nov 5, 2019, 1:10:45 PM",
  "dateUpdated": "Aug 5, 2024, 1:33:17 AM",
  "baseScore": 7.5,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
  "references": [
    "https://nvd.nist.gov/vuln/detail/CVE-2019-17221",
    "https://github.com/Medium/phantomjs",
    "https://web.archive.org/web/20191220171022/https://www.darkmatter.ae/blogs/breaching-the-perimeter-phantomjs-arbitrary-file-read",
    "https://www.suse.com/security/cve/CVE-2019-17221.html",
    "https://www.darkmatter.ae/blogs/breaching-the-perimeter-phantomjs-arbitrary-file-read/"
  ],
  "aliases": [
    "CVE-2019-17221",
    "GHSA-x43g-gj9x-838x"
  ],
  "assigner": "mitre",
  "epss": 8.71,
  "enisaIdProduct": [
    {
      "id": "06281d98-22b3-3e61-adb6-30fe06326731",
      "product": {
        "name": "n/a"
      },
      "product_version": "n/a"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "c8367ade-dd1e-3103-8ce9-214d86da48b0",
      "vendor": {
        "name": "n/a"
      }
    }
  ]
}