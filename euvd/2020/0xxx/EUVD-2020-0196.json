{
  "id": "EUVD-2020-0196",
  "enisaUuid": "b4c1cf7c-835d-302a-9aaa-02b90f0105b0",
  "description": "In Tensorflow before version 2.3.1, the `RaggedCountSparseOutput` implementation does not validate that the input arguments form a valid ragged tensor. In particular, there is no validation that the values in the `splits` tensor generate a valid partitioning of the `values` tensor. Thus, the code sets up conditions to cause a heap buffer overflow. A `BatchedMap` is equivalent to a vector where each element is a hashmap. However, if the first element of `splits_values` is not 0, `batch_idx` will never be 1, hence there will be no hashmap at index 0 in `per_batch_counts`. Trying to access that in the user code results in a segmentation fault. The issue is patched in commit 3cbb917b4714766030b28eba9fb41bb97ce9ee02 and is released in TensorFlow version 2.3.1.",
  "datePublished": "Sep 25, 2020, 7:15:00 PM",
  "dateUpdated": "Sep 1, 2021, 8:19:33 AM",
  "baseScore": 5.9,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "references": [
    "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x7rp-74x2-mjf3",
    "https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1",
    "https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02",
    "https://nvd.nist.gov/vuln/detail/CVE-2020-15200",
    "https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-cpu/PYSEC-2020-280.yaml",
    "https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-gpu/PYSEC-2020-315.yaml",
    "https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow/PYSEC-2020-123.yaml"
  ],
  "aliases": [
    "CVE-2020-15200",
    "GHSA-x7rp-74x2-mjf3",
    "PYSEC-2020-280"
  ],
  "assigner": "GitHub_M",
  "epss": 0.28,
  "enisaIdProduct": [
    {
      "id": "e992f0ff-129e-3b60-a459-2f542dd132f8",
      "product": {
        "name": "tensorflow"
      },
      "product_version": "= 2.3.0"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "ef3d163e-1f24-3d39-ac6d-dcc8094d5d03",
      "vendor": {
        "name": "tensorflow"
      }
    }
  ]
}