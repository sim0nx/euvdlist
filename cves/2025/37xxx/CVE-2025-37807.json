{
  "id": "EUVD-2025-13986",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix kmemleak warning for percpu hashmap\n\nVlad Poenaru reported the following kmemleak issue:\n\n  unreferenced object 0x606fd7c44ac8 (size 32):\n    backtrace (crc 0):\n      pcpu_alloc_noprof+0x730/0xeb0\n      bpf_map_alloc_percpu+0x69/0xc0\n      prealloc_init+0x9d/0x1b0\n      htab_map_alloc+0x363/0x510\n      map_create+0x215/0x3a0\n      __sys_bpf+0x16b/0x3e0\n      __x64_sys_bpf+0x18/0x20\n      do_syscall_64+0x7b/0x150\n      entry_SYSCALL_64_after_hwframe+0x4b/0x53\n\nFurther investigation shows the reason is due to not 8-byte aligned\nstore of percpu pointer in htab_elem_set_ptr():\n  *(void __percpu **)(l->key + key_size) = pptr;\n\nNote that the whole htab_elem alignment is 8 (for x86_64). If the key_size\nis 4, that means pptr is stored in a location which is 4 byte aligned but\nnot 8 byte aligned. In mm/kmemleak.c, scan_block() scans the memory based\non 8 byte stride, so it won't detect above pptr, hence reporting the memory\nleak.\n\nIn htab_map_alloc(), we already have\n\n        htab->elem_size = sizeof(struct htab_elem) +\n                          round_up(htab->map.key_size, 8);\n        if (percpu)\n                htab->elem_size += sizeof(void *);\n        else\n                htab->elem_size += round_up(htab->map.value_size, 8);\n\nSo storing pptr with 8-byte alignment won't cause any problem and can fix\nkmemleak too.\n\nThe issue can be reproduced with bpf selftest as well:\n  1. Enable CONFIG_DEBUG_KMEMLEAK config\n  2. Add a getchar() before skel destroy in test_hash_map() in prog_tests/for_each.c.\n     The purpose is to keep map available so kmemleak can be detected.\n  3. run './test_progs -t for_each/hash_map &' and a kmemleak should be reported.",
  "datePublished": "May 8, 2025, 6:26:06 AM",
  "dateUpdated": "May 8, 2025, 6:26:06 AM",
  "baseScore": 0.0,
  "references": [
    "https://nvd.nist.gov/vuln/detail/CVE-2025-37807",
    "https://git.kernel.org/stable/c/11ba7ce076e5903e7bdc1fd1498979c331b3c286",
    "https://git.kernel.org/stable/c/1f1c29aa1934177349c17e3c32e68ec38a7a56df",
    "https://git.kernel.org/stable/c/7758e308aeda1038aba1944f7302d34161b3effe"
  ],
  "aliases": [
    "CVE-2025-37807",
    "GHSA-73cw-j3wh-rf6g"
  ],
  "assigner": "Linux",
  "epss": 0.02,
  "enisaIdProduct": [
    {
      "id": "283951e6-a32f-3a5c-8fa8-f75d4f58f5f9",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.12.26"
    },
    {
      "id": "52dd1e87-ce85-3a87-bf35-f637832ec838",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <11ba7ce076e5903e7bdc1fd1498979c331b3c286"
    },
    {
      "id": "5cc75c6d-c030-3b72-a6c6-7d7b52df806a",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.14.5"
    },
    {
      "id": "5e08d32a-f252-35c1-9637-5bed5594f4a6",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.15-rc1"
    },
    {
      "id": "90d6e0bb-28ac-3981-93f1-969610a9745c",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <7758e308aeda1038aba1944f7302d34161b3effe"
    },
    {
      "id": "9a51b18b-f689-3272-8162-17e6e41104d5",
      "product": {
        "name": "Linux"
      },
      "product_version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2 <1f1c29aa1934177349c17e3c32e68ec38a7a56df"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "39378743-e386-36ac-944b-98b85b1366f5",
      "vendor": {
        "name": "Linux"
      }
    }
  ],
  "cve": "CVE-2025-37807"
}
