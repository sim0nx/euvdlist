{
  "id": "EUVD-2024-50512",
  "enisaUuid": "0dce4e81-a6f7-3f29-9741-7f226bd46260",
  "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: resolve faulty mmap_region() error path behaviour\n\nThe mmap_region() function is somewhat terrifying, with spaghetti-like\ncontrol flow and numerous means by which issues can arise and incomplete\nstate, memory leaks and other unpleasantness can occur.\n\nA large amount of the complexity arises from trying to handle errors late\nin the process of mapping a VMA, which forms the basis of recently\nobserved issues with resource leaks and observable inconsistent state.\n\nTaking advantage of previous patches in this series we move a number of\nchecks earlier in the code, simplifying things by moving the core of the\nlogic into a static internal function __mmap_region().\n\nDoing this allows us to perform a number of checks up front before we do\nany real work, and allows us to unwind the writable unmap check\nunconditionally as required and to perform a CONFIG_DEBUG_VM_MAPLE_TREE\nvalidation unconditionally also.\n\nWe move a number of things here:\n\n1. We preallocate memory for the iterator before we call the file-backed\n   memory hook, allowing us to exit early and avoid having to perform\n   complicated and error-prone close/free logic. We carefully free\n   iterator state on both success and error paths.\n\n2. The enclosing mmap_region() function handles the mapping_map_writable()\n   logic early. Previously the logic had the mapping_map_writable() at the\n   point of mapping a newly allocated file-backed VMA, and a matching\n   mapping_unmap_writable() on success and error paths.\n\n   We now do this unconditionally if this is a file-backed, shared writable\n   mapping. If a driver changes the flags to eliminate VM_MAYWRITE, however\n   doing so does not invalidate the seal check we just performed, and we in\n   any case always decrement the counter in the wrapper.\n\n   We perform a debug assert to ensure a driver does not attempt to do the\n   opposite.\n\n3. We also move arch_validate_flags() up into the mmap_region()\n   function. This is only relevant on arm64 and sparc64, and the check is\n   only meaningful for SPARC with ADI enabled. We explicitly add a warning\n   for this arch if a driver invalidates this check, though the code ought\n   eventually to be fixed to eliminate the need for this.\n\nWith all of these measures in place, we no longer need to explicitly close\nthe VMA on error paths, as we place all checks which might fail prior to a\ncall to any driver mmap hook.\n\nThis eliminates an entire class of errors, makes the code easier to reason\nabout and more robust.",
  "datePublished": "Nov 25, 2024, 9:17:48 PM",
  "dateUpdated": "Oct 1, 2025, 8:17:12 PM",
  "baseScore": 7.8,
  "baseScoreVersion": "3.1",
  "baseScoreVector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
  "references": [
    "https://git.kernel.org/stable/c/43323a4e5b3f8ccc08e2f835abfdc7ee9da8f6ed",
    "https://git.kernel.org/stable/c/44f48eb9a6051826227bbd375446064fb2a43c6c",
    "https://git.kernel.org/stable/c/52c81fd0f5a8bf8032687b94ccf00d13b44cc5c8",
    "https://git.kernel.org/stable/c/bdc136e2b05fabcd780fe5f165d154eb779dfcb0",
    "https://git.kernel.org/stable/c/5de195060b2e251a835f622759550e6202167641",
    "https://project-zero.issues.chromium.org/issues/374117290"
  ],
  "aliases": [
    "CVE-2024-53096"
  ],
  "assigner": "Linux",
  "epss": 0.04,
  "enisaIdProduct": [
    {
      "id": "042b975e-d74d-3e7e-9771-d854e21f3f37",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.10.231"
    },
    {
      "id": "0cbe777e-e7a4-3691-a630-fadebd464f24",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 0"
    },
    {
      "id": "210cd40a-b284-3384-87a4-89c113c61553",
      "product": {
        "name": "Linux"
      },
      "product_version": "deb0f6562884b5b4beb883d73e66a7d3a1b96d99 <bdc136e2b05fabcd780fe5f165d154eb779dfcb0"
    },
    {
      "id": "25ebb9f3-a6b1-391b-b113-d871637204e5",
      "product": {
        "name": "Linux"
      },
      "product_version": "6757330b1be5b0606125b65ed50caac69bccf9a5"
    },
    {
      "id": "474aae0d-10f1-3615-8d13-0f0b3c49ca66",
      "product": {
        "name": "Linux"
      },
      "product_version": "deb0f6562884b5b4beb883d73e66a7d3a1b96d99 <52c81fd0f5a8bf8032687b94ccf00d13b44cc5c8"
    },
    {
      "id": "48d7c846-94aa-3b9f-b3b1-d231ae2cb0e9",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 5.15.174"
    },
    {
      "id": "55eba034-de46-39ed-9252-4f8c07214473",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.1.119"
    },
    {
      "id": "952145ad-0cb7-30e6-b347-99359c41af3a",
      "product": {
        "name": "Linux"
      },
      "product_version": "deb0f6562884b5b4beb883d73e66a7d3a1b96d99 <5de195060b2e251a835f622759550e6202167641"
    },
    {
      "id": "9f8eaa1e-cd20-3026-b835-4328156c5a9e",
      "product": {
        "name": "Linux"
      },
      "product_version": "66f2ed0172af04a89677ae1898600e1264e25800"
    },
    {
      "id": "bf4ddbda-9719-361b-b50e-bf0b555f02ed",
      "product": {
        "name": "Linux"
      },
      "product_version": "6.1"
    },
    {
      "id": "d80f8df5-a47f-3eab-8f0f-5c79a047f26b",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.6.63"
    },
    {
      "id": "dc13a066-4b82-3087-9314-b020825fd670",
      "product": {
        "name": "Linux"
      },
      "product_version": "43bed0a13a5cdbb314d14f28c2bf2c60eb4e6e1e <44f48eb9a6051826227bbd375446064fb2a43c6c"
    },
    {
      "id": "e0ac98e8-3be6-3a14-8aa3-8beaca8f6986",
      "product": {
        "name": "Linux"
      },
      "product_version": "a3c08c021778dad30f69895e378843e9f423d734 <43323a4e5b3f8ccc08e2f835abfdc7ee9da8f6ed"
    },
    {
      "id": "e3c5ba83-a590-3b0b-ac9e-53d14624aad6",
      "product": {
        "name": "Linux"
      },
      "product_version": "patch: 6.12"
    }
  ],
  "enisaIdVendor": [
    {
      "id": "8bc085b6-e4da-3534-a8ed-2be1c9603fcb",
      "vendor": {
        "name": "Linux"
      }
    }
  ]
}